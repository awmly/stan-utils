{
  "version": 3,
  "file": "stan-utils.js",
  "sources": [
    "src/stan/stan.js",
    "src/function.feature-detect/feature-detect.js",
    "src/function.get-max-min/get-max-min.js",
    "src/function.get-query-string/get-query-string.js",
    "src/function.get-size/get-size.js",
    "src/function.log/log.js",
    "src/function.on-off/on-off.js",
    "src/function.over-out-delay/over-out-delay.js",
    "src/component.auto-class/auto-class.js",
    "src/component.card-ui/card-ui.js",
    "src/component.collapse/collapse.js",
    "src/component.dropdown/dropdown.js",
    "src/component.form-elements/form-elements.js",
    "src/component.hide-till/hide-till.js",
    "src/component.img-box/img-box.js",
    "src/component.inset-outset/inset-outset.js",
    "src/component.responsive-nav/pull-down.js",
    "src/component.responsive-nav/slide-out.js",
    "src/component.responsive-preload/responsive-preload.js",
    "src/component.scroll-spy/scroll-spy.js",
    "src/component.tabs/tabs.js",
    "src/component.tooltip-popover/tooltip-popover.js",
    "src/component.touch-hover/touch-hover.js",
    "src/css.helpers/helpers.js",
    "src/plugin.anchor-nav/anchor-nav.js",
    "src/plugin.class-switcher/class-switcher.js",
    "src/plugin.colousel/colousel.js",
    "src/plugin.domovr/domovr.js",
    "src/plugin.filter/filter.js",
    "src/plugin.fixed-size/fixed-size.js",
    "src/plugin.popup/popup.js",
    "src/plugin.predinput/predinput.js",
    "src/plugin.scroll-to/scroll-to.js",
    "src/plugin.slide-out/slide-out.js",
    "src/plugin.slider/slider.js",
    "src/plugin.sticky-fix/sticky-fix.js",
    "src/plugin.swiper/swiper.js"
  ],
  "names": [],
  "mappingshnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;ACxrNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;AChplpvnjlkxxxnjnll
  "sourcesContent": [
    "/* ========================================================================\n * STAN Utils: Stan\n * Author: Andrew Womersley\n * ======================================================================== */\n\nvar $STAN;\n\n(function(CustomConfig) {\n\n    'use strict';\n\n    var Tag = !! CustomConfig.tag ? CustomConfig.tag : 'body';\n\n    var Config = {\n\n        xs: {\n            min_width: 0,\n            classes: 'device-xs mobile',\n            data: {\n                mobile: true,\n                desktop: false\n            }\n        },\n        sm: {\n            min_width: 768,\n            classes: 'device-sm mobile',\n            data: {\n                mobile: true,\n                desktop: false\n            }\n        },\n        md: {\n            min_width: 992,\n            classes: 'device-md desktop',\n            data: {\n                mobile: false,\n                desktop: true\n            }\n        },\n        lg: {\n            min_width: 1200,\n            classes: 'device-lg desktop',\n            data: {\n                mobile: false,\n                desktop: true\n            }\n        }\n\n    };\n\n    // Merge Config with CustomConfig\n    for (var i in Config) {\n        if (typeof CustomConfig[i] === 'object') Config[i] = $.extend(Config[i], CustomConfig[i]);\n    }\n\n    // Set Max Widths\n    Config.xs.max_width = Config.sm.min_width;\n    Config.sm.max_width = Config.md.min_width;\n    Config.md.max_width = Config.lg.min_width;\n    Config.lg.max_width = 9999;\n\n\n    var _STAN = function() { //deferTrigger\n\n        var STAN = !! window.$STAN ? window.$STAN : [];\n        var device;\n        var current_device;\n        var triggers = [];\n        var x;\n        var bp;\n        var ww;\n        var wh;\n\n        // Loop through breakpoints - reset data\n        for (device in Config) {\n\n            bp = Config[device];\n\n            // Remove classes\n            $(Tag).removeClass(bp.classes);\n\n            // Remove data attributes\n            for (x in bp.data) STAN[x] = false;\n\n        }\n\n        current_device = STAN.device;\n\n        // Loop through breakpoints - set data\n        for (device in Config) {\n\n            bp = Config[device];\n\n            ww = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n            wh = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n\n            STAN.windowWidth=ww;\n            STAN.windowHeight=wh;\n\n            if (bp.min_width <= ww && ww < bp.max_width) {\n\n                // Add class\n                $(Tag).addClass(bp.classes);\n\n                if (current_device != device) triggers.push({\n                    type: 'active',\n                    device: device\n                });\n\n                // Add attributes\n                STAN.device = device;\n                STAN.classes = bp.classes;\n                for (x in bp.data) STAN[x] = bp.data[x];\n\n            }\n            else {\n\n                if (current_device == device) triggers.push({\n                    type: 'deactive',\n                    device: device\n                });\n\n            }\n\n        }\n\n        STAN.Tag=Tag;\n\n        // Assign STAN to $_STAN global\n        window.$STAN = STAN;\n\n        // Init triggers\n        for (var i in triggers) {\n            var trigger = triggers[i];\n            $(Tag).trigger(trigger.type + '.sa.stan', [trigger.device]);\n        }\n\n    };\n\n    var _STAN_Resize=function(){\n\n        _STAN();\n        $(Tag).trigger('resize.sa.stan');\n\n    };\n\n    // Set resize listener\n    var timer;\n    $(window).on('resize orientationchange', function() {\n        window.clearTimeout(timer);\n        timer = window.setTimeout(_STAN_Resize, 100);\n    });\n\n    // Run\n    _STAN();\n\n\n})( ((typeof $STAN_Config === 'undefined') ? [] : $STAN_Config) );\n",
    "/* ========================================================================\n * STAN Utils: Feature Detect (has)\n * Author: Andrew Womersley\n * ========================================================================*/\n\n (function($, $STAN) {\n\n    'use strict';\n\n    $STAN.has = function(feature) {\n\n        return $STAN.feature[feature];\n\n    };\n\n    $STAN.feature = [ ];\n\n    // Placeholder\n    $STAN.feature.placeholder=( 'placeholder' in document.createElement('input') && 'placeholder' in document.createElement('textarea') );\n\n    // Add event listener\n    $STAN.feature.eventlistener='addEventListener' in window;\n\n    // XHR2\n    $STAN.feature.xhr2=( 'XMLHttpRequest' in window && 'withCredentials' in new XMLHttpRequest() );\n\n    // Canvas\n    $STAN.feature.canvas=(function() {\n      var elem = document.createElement('canvas');\n      return !!(elem.getContext && elem.getContext('2d'));\n    })();\n\n}(jQuery, $STAN));\n",
    "/* ========================================================================\n * STAN Utils: Get Max\n * Author: Andrew Womersley\n * ========================================================================*/\n\n (function($, $STAN) {\n\n    'use strict';\n\n    $STAN.getMax = function($selector, property) {\n\n        var t;\n        var value=0;\n\n        $selector.each(function(){\n\n            t=parseInt($(this).css(property));\n\n            if( t>value ) value=t;\n\n        });\n\n        return value;\n\n    };\n\n    $STAN.getMin = function($selector, property) {\n\n      var t;\n      var value=99999999;\n\n      $selector.each(function(){\n\n        t=parseInt($(this).css(property));\n\n        if( t<value ) value=t;\n\n      });\n\n      return value;\n\n    };\n\n}(jQuery, $STAN));\n",
    "/* ========================================================================\n * STAN Utils: GetQueryString\n * Author: Andrew Womersley\n * ======================================================================== */\n\n(function($, $STAN) {\n\n    'use strict';\n\n    $STAN.getQueryString = function(replaceSpaces) {\n\n        // Get query string\n        var qs = window.location.search.substring(1);\n\n        // Set req exp pattern\n        var patt = new RegExp(/([^&=]+)=?([^&]*)/g);\n\n        // Set params object to store qs values\n        var params = {};\n\n        // Set matches variable\n        var matches;\n\n        // Loop through pattern matches\n        while (matches = patt.exec(qs)) {\n\n            // Set param\n            if (replaceSpaces) {\n\n                // Replace + and %20 for spaces\n                params[matches[1]] = matches[2].replace(/(\\+|\\%20)/g, ' ');\n\n            } else {\n\n                // Leave string as is\n                params[matches[1]] = matches[2];\n\n            }\n\n        }\n\n        // Return params object\n        return params;\n\n    }\n\n}(jQuery, $STAN));\n",
    "/* ========================================================================\n * STAN Utils: GetSize\n * Author: Andrew Womersley\n * ======================================================================== */\n\n(function($, $STAN) {\n\n\t'use strict';\n\n  var size={};\n  var width, display, clone;\n\n  var setSize=function(target){\n\n    return {\n      outerWidthMargin:target.outerWidth(true),\n      outerHeightMargin:target.outerHeight(true),\n      outerWidth:target.outerWidth(),\n      outerHeight:target.outerHeight(),\n      width:target.width(),\n      height:target.height()\n    }\n\n  };\n\n  $STAN.getSize=function(target,css){\n\n    if(typeof css=='undefined') css={};\n\n    css.visibility=\"hidden\";\n\n    clone = target.clone().css(css);\n\n    $('body').append(clone);\n\n    size=setSize(clone);\n\n    clone.remove();\n\n    return size;\n\n  }\n\n}(jQuery, $STAN));\n",
    "/* ========================================================================\n * STAN Utils: Log\n * Author: Andrew Womersley\n * ======================================================================== */\n\n(function($, $STAN) {\n\n  'use strict';\n\n  $STAN.log=function(msg){\n\n    if (typeof console == \"object\") {\n\n      console.log(msg);\n\n    }\n\n  };\n\n}(jQuery, $STAN));\n",
    "/* ========================================================================\n * STAN Utils: On / Off\n * Author: Andrew Womersley\n * ========================================================================*/\n\n (function($, $STAN) {\n\n    'use strict';\n\n    // Shortcut events\n    $STAN.on=function(_event,_callback){\n\n      if(_event=='xs' || _event=='sm' || _event=='md' || _event=='lg'){\n\n        $($STAN.Tag).on('active.sa.stan',function(event,device){\n          if(device==_event) _callback();\n        });\n\n      }else{\n\n        $($STAN.Tag).on(_event + '.sa.stan',_callback);\n\n      }\n\n    };\n\n    $STAN.off=function(_event,_callback){\n\n      if(_event=='xs' || _event=='sm' || _event=='md' || _event=='lg'){\n\n        $($STAN.Tag).on('deactive.sa.stan',function(event,device){\n          if(device==_event) _callback();\n        });\n\n      }\n\n    };\n\n}(jQuery, $STAN));\n",
    "(function($, $STAN) {\n\n  'use strict';\n\n  $STAN.overOutDelay=function(element,over,out,delay){\n\n    $(element).mouseenter(function(){\n\n      $(element).attr('data-over',1);\n\n      over();\n\n    }).mouseleave(function(){\n\n      $(element).attr('data-over',0);\n\n      setTimeout(function(){\n\n        if( $(element).attr('data-over')=='0' ) out();\n\n      },delay);\n\n    });\n\n  }\n\n}(jQuery, $STAN));\n",
    "/* ========================================================================\n * STAN Utils: AutoClass\n * Author: Andrew Womersley\n * ======================================================================== */\n\n$(function() {\n\n  'use strict';\n\n    var AutoClass=function(){\n\n        var x, autoclass, parts, selector, classes;\n\n        $('[data-auto-class]').each(function(){\n\n            // Get auto class attribute\n            autoclass=$(this).attr('data-auto-class').split(\"}\");\n\n            for(x=0;x<autoclass.length-1;x++){\n\n              // Get parts\n              parts=autoclass[x].match(/[^{]*/g);\n\n              // Set selector\n              selector=$.trim(parts[0]);\n\n              // Set classes\n              classes=$.trim(parts[2]);\n\n              // Apply classes to selector\n              $(this).find(selector).addClass(classes);\n\n            }\n\n        });\n\n    };\n\n    $(document).on('ready',AutoClass);\n\n});\n",
    "/* ========================================================================\n * STAN Utils: Card UI\n * Author: Andrew Womersley\n * ======================================================================== */\n\n$(function() {\n\n    'use strict';\n\n    var HitTestCount=0;\n\n    var CardHitTest = function($card,$siblings,top,left,width,height){\n\n        var t = top;\n        var l = left;\n        var w = width;\n        var h = height;\n        var b = t+h;\n        var r = l+w;\n\n        /*var ct = top;\n        var cl = left;\n        var cw = 100;\n        var ch = 30;\n        var cb = ct+ch;\n        var cr = cl+cw;*/\n\n\n\n        var st, sl, sw, sh, sb, sr;\n        //console.log(t + \" \" +l + \" \" + w + \" \" + h);\n\n        var HIT=false;\n\n        $siblings.each(function(index){\n\n          if($(this).data('active') && !HIT){\n\n            var st = $(this).data('top');\n            var sl = $(this).data('left');\n            var sw = $(this).data('width');\n            var sh = $(this).outerHeight(true);\n            var sb = st+sh;\n            var sr = sl+sw;\n\n            HitTestCount++;\n\n            //console.log(index+\" \"+st+\" \"+sb);\n\n            //console.log(t + \" \" + st + \" \" + b + \" \" + sb);\n            //if( (t>=st && t<sb) || (b>st && b<=sb) ){\n            if( t<sb && b>st){\n              //console.log(\"HIT TOP\");\n              //console.log(l + \" \" + r + \" \" + sl + \" \" + sr);\n              if( l<sr && r>sl ){\n                //console.log(\"HIT SIDES\");\n                HIT=true;\n              }\n            }\n\n          }\n\n        });\n\n        if(!HIT){\n\n          //console.log(\"OK\");\n          return true;\n\n        }else{\n\n          //console.log(\"HIT\");\n          return false;\n\n        }\n\n    };\n\n    var CardUI = function() {\n\n        $(\".sa-cards\").each(function() {\n\n            var $this = $(this);\n\n            var selector = (typeof $(this).attr('data-selector') !== 'undefined') ? $(this).attr('data-selector') : '.card';\n            var maxCols = (typeof $(this).attr('data-maxcols') !== 'undefined') ? $(this).attr('data-maxcols') : '12';\n\n            if ($(this).find(selector).length) {\n\n                var max, _Pos, _Col, _Col2, pos, col, top, span, width, colid, ok;\n\n                var minwidth=$this.outerWidth()/maxCols;\n\n                $(this).find(selector).data('active',false);\n                _Col=[ [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0] ];\n                _Col2=[0];\n\n                $this.find(selector).each(function(index) {\n\n                  if($STAN.device=='xs'){\n\n                    $(this).removeClass('absolute').css({\n                        left: 'auto',\n                        top: 'auto'\n                    });\n\n                  }else{\n\n                    width = $(this).outerWidth();\n                    span = maxCols / Math.round(($this.parent().width()+30) / width);\n\n                    pos=9999;\n                    top=9999;\n\n                    //console.log(_Col2);\n\n                    //for(var x in _Col){\n\n                      //_Pos=_Col[x];\n                    //  _Pos=_Col2;\n\n                      //console.log(\"COL: \"+x);\n                      //console.log(_Pos);\n\n                      for(var y in _Col2){\n                        ok=false;\n                        for(var x=0; x<maxCols; x++){\n                          if(_Col2[y]>=0){\n                            if( CardHitTest( $(this), $this.find(selector), _Col2[y], x*100, 100, 50 ) ){\n\n                              ok=true\n\n                            }\n                          }\n                        }\n                        if(!ok) _Col2[y]=-1;\n                      }\n\n                    //}\n\n                    for(var x=0; x<maxCols; x++){\n\n                      _Pos=_Col2;\n\n                      for(var y in _Pos){\n\n                        if(_Pos[y]<top ){\n                          colid=parseInt(span)+parseInt(x);\n\n                          if(colid<=maxCols && _Pos[y]>=0){\n\n                            if( CardHitTest( $(this), $this.find(selector), _Pos[y], x*100, span*100, $(this).outerHeight(true) ) ){\n                              col = x;\n                              pos = y\n                              top = _Pos[y];\n                            }\n\n                          }\n                        }\n\n                      } // end _Pos loop\n\n                    } // end _Col loop\n\n                    $(this).addClass('absolute').css({\n                        left: (minwidth * col) + 'px',\n                        top: top + 'px'\n                    }).data('active',true).data('top',top).data('left',(100 * col)).data('width',(100* span));\n\n                    for(var x=0; x<span; x++){\n                      colid=parseInt(col)+parseInt(x);\n                      //console.log(colid);\n                      //_Col[colid].push( (top+$(this).outerHeight(true)) );\n\n                    }\n\n                    _Col2.push( (top+$(this).outerHeight(true)) );\n\n                    } // end if device XS\n\n                  }); // end selector each\n\n                  max = 0;\n\n                  // Find highest column\n                  for(var y in _Col2){\n\n                      if (_Col2[y] > max) max = _Col2[y];\n\n                  }\n\n                  // Set holder height to match highest column\n                  if($STAN.device=='xs'){\n                    $(this).css('height', 'auto');\n                  }else{\n                    $(this).css('height', max + 'px');\n                  }\n                  //console.log(HitTestCount);\n\n\n\n            } // end if selector length\n\n        }); // end sa-cards each\n\n    }; // end function\n\n    //$(window).on('resize', CardUI);\n\n    $('body').on('active.sa.stan', CardUI);\n\n    $('.sa-cards').on('position.sa.cards', CardUI);\n\n});\n",
    "/* ========================================================================\n * STAN Utils: Collapse\n * Author: Andrew Womersley\n * ======================================================================== */\n\n$(function() {\n\n    'use strict';\n\n    // Add click\n    $('.sa-collapse .sa-click').click(function() {\n\n        if (!$(this).closest('.sa-collapse').hasClass('inactive')) {\n\n            if( $(this).closest('.sa-collapse').hasClass('active') ){\n\n                $(this).closest('.sa-collapse').removeClass('active')\n                    .find('.collapse-content').first().collapse('hide');\n            }else{\n\n              $(this).closest('.sa-collapse').addClass('active')\n                  .find('.collapse-content').first().collapse('show');\n\n            }\n\n            if ($(this).parents('.sa-accordion').length) {\n\n                $(this).closest('.sa-collapse').siblings('.sa-collapse.active').each(function() {\n\n                    $(this).removeClass('active')\n                        .find('.collapse-content').first().collapse('hide');\n\n                });\n\n            }\n\n        }\n\n    });\n\n\n    // Add BS collapse class\n    $('.sa-collapse .collapse-content').each(function() {\n\n        $(this).addClass('collapse');\n\n    });\n\n    // Check for collapses starting open\n    $('.sa-collapse.active').each(function() {\n\n        $(this).find('.collapse-content').first().addClass('in');\n\n    });\n\n    // Device dependant logic\n    $('body').on('active.sa.stan', function() {\n\n        $('[data-collapse-devices]').each(function() {\n\n            if ( $(this).attr('data-collapse-devices')=='all' || $(this).attr('data-collapse-devices').indexOf($STAN.device) >= 0) {\n\n                $(this).removeClass('inactive');\n\n                if ($(this).attr('data-collapse-devices-open')) {\n\n                    if ($(this).attr('data-collapse-devices-open')=='all' || $(this).attr('data-collapse-devices-open').indexOf($STAN.device) >= 0) {\n                        $(this).addClass('active').find('.collapse-content').first().addClass('in').css('height', '');\n                    } else {\n                        $(this).removeClass('active').find('.collapse-content').first().removeClass('in').addClass('collapse');\n                    }\n\n                } else {\n\n                    $(this).removeClass('active').find('.collapse-content').first().removeClass('in').addClass('collapse');\n\n                }\n\n            } else {\n\n              $(this).addClass('inactive');\n              $(this).removeClass('active').find('.collapse-content').first().addClass('in').removeClass('collapse').css('height', '');\n\n            }\n\n        });\n\n    }).trigger('active.sa.stan');\n\n});\n",
    "/* ========================================================================\n* STAN Utils: Dropdown\n* Author: Andrew Womersley\n* ======================================================================== */\n\n$(function() {\n\n  'use strict';\n\n  var width, subnav, pad;\n\n  $('.sa-dropdown').click(function(event){\n\n    if($(this).hasClass('active')){\n\n      $('.sa-dropdown').removeClass('active');\n\n    }else{\n\n      $('.sa-dropdown').removeClass('active');\n      $(this).addClass('active');\n\n      width = 0;\n      subnav = $(this).find('ul');\n\n\n      pad = subnav.outerWidth()-subnav.width();\n\n      subnav.css('width', '1000px')\n      .children('li').css('display', 'inline-block');\n\n      subnav.children('li').each(function() {\n\n        if ($(this).outerWidth() > width) width = $(this).outerWidth();\n\n      });\n\n      width=width+pad+5;\n\n      subnav.css('width', '')\n      .children('li').css('display', '');\n\n      if (width > subnav.outerWidth()) subnav.css('width', width + 'px');\n      else if (width < $(this).outerWidth()) subnav.css('width', $(this).outerWidth() + 'px');\n\n      event.stopPropagation();\n\n    }\n\n  });\n\n  $('body').on('click',function(){\n\n    $('.sa-dropdown').removeClass('active');\n\n  });\n\n});\n",
    "/* ========================================================================\n * STAN Utils: Form Elements\n * Author: Andrew Womersley\n * ======================================================================== */\n\n $(function() {\n\n  'use strict';\n\n    $('.sa-checkbox, .sa-radio').click(function(){\n\n      var $input=$(this).find('input');\n\n      if($input.attr('type')=='radio'){\n\n        $(\"[name='\"+$input.attr('name')+\"']\").each(function(){\n\n          $(this) .prop('checked',false)\n                  .parents('.sa-radio').removeClass('active');\n\n        });\n\n      }\n\n      if($(this).hasClass('active')){\n\n        $(this) .removeClass('active')\n                .find('input').prop('checked',false);\n\n      }else{\n\n        $(this) .addClass('active')\n                .find('input').prop('checked',true);\n\n      }\n\n    });\n\n    $('.sa-checkbox, .sa-radio').each(function(){\n\n      if($(this).find('input').prop('checked')){\n\n        $(this).addClass('active');\n\n      }\n\n   });\n\n});\n",
    "/* ========================================================================\n* STAN Utils: Hide Till\n* Author: Andrew Womersley\n* ======================================================================== */\n\n$(function() {\n\n  'use strict';\n\n  $('.hide-till-ready').removeClass('hide-till-ready');\n  $('.none-till-ready').removeClass('none-till-ready');\n\n  $('.hide-on-ready').remove();\n  $('.none-on-ready').remove();\n\n  $(window).load(function(){\n\n    $('.hide-till-load').removeClass('hide-till-load');\n    $('.none-till-load').removeClass('none-till-load');\n\n    $('.hide-on-load').remove();\n    $('.none-on-load').remove();\n\n  });\n\n  $($STAN.Tag).trigger('resize.sa.stan');\n\n});\n",
    "/* ========================================================================\n * STAN Utils: ImgBox\n * Author: Andrew Womersley\n * ======================================================================== */\n\n$(function() {\n\n\t'use strict';\n\n\tvar imgBox=function(){\n\n\t\t$(\"img[data-img-box]\").each(function() {\n\n\t\t\tvar $image = $(this);\n\n\t\t\t// Set parent width and heights\n\t\t\tvar pw = $image.parent().width();\n            var ph = $image.parent().height()\n\n            // Remove image size modifiers\n            $image.removeClass('maxwidth maxheight');\n\n            // Add image modifiers\n            if ($image.attr('data-img-box') == 'fit') {\n\n                if (($image.width() / $image.height()) > (pw / ph)) {\n                    $image.addClass('maxwidth');\n                } else {\n                    $image.addClass('maxheight');\n                }\n\n            } else {\n\n                if (($image.width() / $image.height()) < (pw / ph)) {\n                    $image.addClass('maxwidth');\n                } else {\n                    $image.addClass('maxheight');\n                }\n\n            }\n\n            // Calculate margins\n            var mt = (ph - $image.height()) / 2;\n            var ml = (pw - $image.width()) / 2;\n\n\n            // Set margins\n            $image.css({\n                'margin-top': mt + 'px',\n                'margin-left': ml + 'px'\n            });\n\n\t\t});\n\n\t}\n\n  $(\"img[data-img-box]\").each(function() {\n\n    $(this).parent().css('overflow','hidden');\n\n  });\n\n\t$(window).on('resize', imgBox);\n\n\t$(\"img[data-img-box]\").on('load', imgBox);\n\n});\n",
    "/* ========================================================================\n* STAN Utils: InsetOutset\n* Author: Andrew Womersley\n* ======================================================================== */\n\n$(function() {\n\n  'use strict';\n\n  var InsetOutset = function() {\n\n    var padding, paddingTop, width, side, outset, clone;\n\n    $('.sa-inset,.sa-outset').each(function() {\n\n      // Set side\n      if ($(this).hasClass('sa-right')) side = 'right';\n      else side = 'left';\n\n      // Reset inline css padding\n      $(this).parent().css('padding-' + side, '');\n\n      // Get offset\n      padding = parseInt($(this).parent().css('padding-' + side));\n      paddingTop = parseInt($(this).parent().css('padding-top'));\n\n      // Get width\n      width = $(this).outerWidth(true);\n\n      // If width is zero (hidden)  or less than 10 ie bug) - use getSize to find its width\n      if (!width || width<10) width = $STAN.getSize($(this)).outerWidthMargin;\n\n      // Apply paddings\n      if ($(this).hasClass('sa-outset')) {\n\n        $(this).parent().parent().css('padding-' + side, width + 'px');\n        $(this).css(side, '-' + width + 'px');\n\n      } else {\n\n        $(this).parent().css('padding-' + side, (padding + width) + 'px');\n        $(this).css(side, padding + 'px');\n\n      }\n\n      if( $(this).hasClass('sa-top') ){\n        $(this).css('margin-top', paddingTop + 'px');\n      }\n\n    });\n\n  };\n\n  // Add required parent class\n  $('.sa-inset,.sa-outset').each(function() {\n    if ($(this).parent().css('position') == 'static') $(this).parent().addClass('relative');\n  });\n\n  // Add function listeners\n  $(window).on('load resize', InsetOutset);\n\n  // Turn visibility back on\n  $('.sa-inset,.sa-outset').css('visibility','visible');\n\n});\n",
    "/* ========================================================================\n * STAN Utils: Pull Down Navigation\n * Author: Andrew Womersley\n * ======================================================================== */\n\n$(function() {\n\n    'use strict';\n\n    var OpenMobile = function(){\n\n        $('.pull-nav').attr('data-open',1);\n\n        $('.pull-nav nav').collapse('show');\n\n        $('.pull-nav-mask').css({\n            display: 'block',\n            opacity: 0\n        });\n        $('.pull-nav-mask').animate({\n            opacity: 1\n        }, 200, \"swing\");\n\n    };\n\n    var CloseMobile = function() {\n\n        $('.pull-nav').attr('data-open', 0);\n\n        $('.pull-nav nav').collapse('hide');\n\n        $('.pull-nav-mask').animate({\n            opacity: 0\n        }, 200, \"swing\", function() {\n            $('.pull-nav-mask').css('display', 'none');\n        });\n\n    };\n\n    var viewPort = function() {\n\n      var w = $STAN.windowWidth;\n      var h = $STAN.windowHeight;\n      var breakpoint = (typeof $('.pull-nav').attr('data-breakpoint')!=='undefined') ? $('.pull-nav').attr('data-breakpoint') : 992;\n\n      $('.pull-nav, .pull-nav-load').removeClass('desktop mobile');\n\n      if (w < breakpoint) {\n\n          $('.pull-nav, .pull-nav-load').addClass('mobile');\n\n          $('.pull-nav-mask').css({height:h-$('header').height() + 'px', top:$('header').height()+'px'});\n\n          $('.pull-nav nav').addClass('collapse');\n\n          if( $('.pull-nav').attr('data-open')!='1') $('.pull-nav nav').css('height',0).removeClass('in');\n\n          $('.pull-nav ul').css({\"max-height\":h-$('header').height()-60 + 'px'});\n\n      } else {\n\n          $('.pull-nav').attr('data-open', 0).addClass('desktop');\n\n          $('.pull-nav nav').addClass('in').css({\n              height: ''\n          });\n\n          $('.pull-nav-mask').css('display', 'none');\n\n      }\n\n    };\n\n    $(window).on('orientationchange',function(){\n\n      CloseMobile();\n\n    });\n\n\n    $STAN.on('resize',function() {\n\n        viewPort();\n\n    });\n\n    $('.pull-nav-load').click(function(event) {\n\n        if( $('.pull-nav').attr('data-open')=='1'){\n            CloseMobile();\n        }else{\n            OpenMobile();\n        }\n\n        event.stopPropagation();\n\n    });\n\n    $('.pull-nav-mask').click(function(event) {\n\n        CloseMobile();\n\n        event.stopPropagation();\n\n    });\n\n\n\n    $('.pull-nav-mask').on('wheel mousewheel touchmove', function(event) {\n\n        event.preventDefault();\n\n    });\n\n    viewPort();\n\n});\n",
    "/* ========================================================================\n * STAN Utils: Responsive Navigation\n * Author: Andrew Womersley\n * ======================================================================== */\n\n$(function() {\n\n    'use strict';\n\n    var CloseMobile = function() {\n\n        $('.slide-nav').animate({\n            left: '-100%'\n        }, 200, \"swing\", function() {\n            $('.slide-nav').css({\n                visibility: 'hidden'\n            });\n        });\n\n        $('.slide-nav-mask').animate({\n            opacity: 0\n        }, 200, \"swing\", function() {\n            $('.slide-nav-mask').css('display', 'none');\n        });\n\n        ResetNav();\n\n    };\n\n    var ResetNav = function() {\n\n        $('.slide-nav nav').css('left', 0);\n        $('.slide-nav').find('li').removeClass('open');\n        $('.slide-nav').attr('data-open', 0);\n\n    };\n\n    var viewPort = function (){\n\n      var w = $(window).width();\n      var h = $(window).height();\n      var breakpoint = (typeof $('.slide-nav').attr('data-breakpoint')!=='undefined') ? $('.slide-nav').attr('data-breakpoint') : 992;\n\n      $('.slide-nav, .slide-nav-load').removeClass('desktop mobile');\n\n      if (w < breakpoint) {\n\n          $('.slide-nav, .slide-nav-load').addClass('mobile');\n          $('.slide-nav, .slide-nav-mask').css('height', h + 'px');\n\n      } else {\n\n          $('.slide-nav').addClass('desktop').css({\n              height: '',\n              visibility: '',\n              left: ''\n          });\n\n          $('.slide-nav-mask').css('display', 'none');\n\n          ResetNav();\n      }\n\n    };\n\n    $STAN.on('resize',function() {\n\n        viewPort();\n\n    });\n\n    $('.slide-nav-load').click(function(event) {\n\n        $('.slide-nav').css({\n            visibility: 'visible',\n            left: '-100%'\n        })\n        $('.slide-nav').attr('data-open', 1).animate({\n            left: 0\n        }, 200, \"swing\");\n        $('.slide-nav-mask').css({\n            display: 'block',\n            opacity: 0\n        });\n        $('.slide-nav-mask').animate({\n            opacity: 1\n        }, 200, \"swing\");\n\n        event.stopPropagation();\n\n    });\n\n    $('.slide-nav-mask').click(function(event) {\n\n        CloseMobile();\n\n        event.stopPropagation();\n\n    });\n\n    $('.slide-nav a').click(function() {\n\n        if ($(this).parents('.slide-nav').hasClass('mobile') && !$('.slide-nav nav').is(':animated')) {\n\n            var p = $(this).parent();\n\n            if ($(p).find('.sub:not(.desktop-only)').length) {\n\n                $(p).addClass('open');\n                $('.slide-nav nav').animate({\n                    left: '-=100%'\n                }, 200, \"swing\");\n\n                $(p).find('h2').attr('data-url', $(this).attr('href'));\n                return false;\n\n            }\n\n        }\n\n    });\n\n    $('.slide-nav .bwd').click(function() {\n\n        var p = $(this).closest('li');\n\n        $('.slide-nav nav').animate({\n            left: '+=100%'\n        }, 200, \"swing\", function() {\n            $(p).removeClass('open');\n        });\n\n    });\n\n    $('.slide-nav .fwd').click(function() {\n\n        CloseMobile();\n\n    });\n\n    $('.slide-nav h2').click(function() {\n\n        document.location.href = $(this).attr('data-url');\n\n    });\n\n    $('.slide-nav-mask').on('wheel mousewheel touchmove', function(event) {\n\n        event.preventDefault();\n\n    });\n\n    viewPort();\n\n});\n",
    "/* ========================================================================\n * STAN Utils: Responsive Preload\n * Author: Andrew Womersley\n * ======================================================================== */\n\n(function($, $STAN) {\n\n  'use strict';\n\n  $STAN.responsiveImages=function(){\n\n    $(\"[data-resp-img='true']\").each(function(){\n\n      var src = $(this).attr('data-'+$STAN.device);\n\n      if( $(this).attr('defer-src') ){\n        $(this).attr('defer-src',src);\n      }else if( $(this).attr('delay-src') ){\n        $(this).attr('delay-src',src);\n      }else{\n        $(this).attr('src',src);\n      }\n\n    });\n\n  };\n\n  $STAN.loadDelayedImages=function(){\n\n    $(\"img[delay-src]\").each(function(){\n\n        if( $(this).attr('delay-src') ){\n            $(this).attr('src', $(this).attr('delay-src') );\n            $(this).attr('delay-src','');\n        }\n\n    });\n\n  };\n\n  $STAN.loadDeferedImages=function($target){\n\n      $target.find(\"img[defer-src]\").each(function(){\n\n        if( $(this).attr('defer-src') ){\n            $(this).attr('src', $(this).attr('defer-src') );\n            $(this).attr('defer-src','');\n        }\n\n      });\n\n  };\n\n  $(\".load-defered-img\").click(function(){\n\n      var $target=!! $(this).attr('data-target') ? $($(this).attr('data-target')) : $(this);\n\n      $STAN.loadDeferedImages($target);\n\n  });\n\n  $('body').on('active.sa.stan', $STAN.responsiveImages );\n\n  $STAN.responsiveImages();\n  $STAN.loadDelayedImages();\n\n}(jQuery, $STAN));\n",
    "/* ========================================================================\n * STAN Utils: ImgResponsive\n * Author: Andrew Womersley\n * ======================================================================== */\n\n$(function() {\n\n    'use strict';\n\n    var scrollSpy = function() {\n\n        var activeAt;\n        var scrollTop=$(window).scrollTop();\n\n        $(\"[data-scroll-spy]\").each(function(){\n\n            activeAt=$(this).attr(\"data-scroll-spy\");\n\n            if( !isNaN(parseFloat(activeAt)) && isFinite(activeAt) ){ // is number\n\n                activeAt=parseInt(activeAt);\n\n            }else{ // is selector\n\n                activeAt=eval(activeAt);\n\n            }\n\n            if(scrollTop>activeAt){\n                $(this).addClass('active');\n            }else{\n                $(this).removeClass('active');\n            }\n\n        });\n\n    };\n\n    $(window).scroll(scrollSpy);\n\n    scrollSpy();\n\n});\n",
    "/* ========================================================================\n * STAN Utils: Tabs\n * Author: Andrew Womersley\n * ========================================================================*/\n\n$(function() {\n\n    'use strict';\n\n    // Main collapse tab function\n    var CollapseTab = function() {\n\n        // Get window width\n        var w = $(window).width();\n\n        $(\".sa-collapse-tabs\").each(function() {\n\n            // Get breakpoint if set - if not use default\n            var breakpoint = (typeof $(this).attr('data-breakpoint') !== 'undefined') ? $(this).attr('data-breakpoint') : 992;\n\n            // Remove desktop and mobile classes\n            $(this).removeClass('desktop mobile');\n\n            // Check if width is larger/smaller than breakpoint\n            if (w < breakpoint) {\n\n                if( $(this).data('index')<0 ){\n\n                  $(this).find(\".tab-pane\").eq(0).removeClass('active');\n                  $(this).find(\".tab-nav li\").eq(0).removeClass('active');\n\n                }\n\n                // Add mobile class to main collapse tabs\n                $(this).addClass('mobile');\n\n            } else {\n\n                // Check for active index\n                if( $(this).data('index')<0 ){\n\n                  $(this).find(\".tab-pane\").eq(0).addClass('active');\n                  $(this).find(\".tab-nav li\").eq(0).addClass('active');\n\n                }\n\n                // Add desktop class to main collapse tabs\n                $(this).addClass('desktop');\n\n            }\n\n        });\n\n    };\n\n    // Read hash\n    var readHash = function() {\n\n        // Set active based on hash\n        var hash = window.location.hash.substring(1);\n\n        $('.sa-tabs, .sa-collapse-tabs').each(function(tabsindex) {\n\n            if (hash) {\n                if ($(this).find(\".tab-nav [data-id='\" + hash + \"']\").length) {\n\n                    $(this).find(\".tab-nav [data-id]\").removeClass('active');\n                    $(this).find(\".tab-nav [data-id='\" + hash + \"']\").addClass('active');\n\n                }\n            }\n\n            // Get index of active tab\n            var index = $(this).find(\".tab-nav li.active\").index();\n\n            // Store index\n            $(this).data('index', index);\n\n            if(index>=0){\n\n              // Make active nav's tab-pane visible\n              $(this).find(\".tab-pane\").removeClass('active');\n              $(this).find(\".tab-pane\").eq(index).addClass('active');\n\n              // Collapse Tab logic\n              if ($(this).hasClass('sa-collapse-tabs')) {\n\n                  // Remove active collapse classes\n                  $(this).find('.tab-content').removeClass('in').addClass('collapse').css('height', 0);\n\n                  // Add active collapse classes\n                  $(this).find('.tab-content').eq(index).addClass('in').removeClass('collapse').css('height', 'auto');\n              }\n\n            }\n\n        });\n\n    };\n\n\n    // Added needed HTML markup\n    $('.sa-tabs, .sa-collapse-tabs').each(function(tabsindex) {\n\n        $(this).addClass('sa-tabs-' + tabsindex);\n\n        $(this).find('.tab-nav li').each(function(index) {\n\n            $(this).attr('data-target', '.sa-tabs-' + tabsindex + ' .tab-pane-' + index);\n\n        });\n\n        $(this).find('.tab-pane').each(function(index) {\n\n            $(this).addClass('tab-pane-' + index);\n\n        });\n\n        // Check there is an active class\n        if (!$(this).find(\".tab-nav li.active\").length) {\n            //$(this).find(\".tab-nav li\").eq(0).addClass('active');\n        }\n\n    });\n\n    // Add click listener\n    $('.tab-nav li').click(function(event) {\n\n        event.preventDefault();\n\n        // Show tab\n        $(this).tab('show');\n\n    });\n\n    // Click event to show collapse\n    $('.sa-collapse-tabs .sa-click').click(function() {\n\n        if ($(this).parents('.sa-collapse-tabs').hasClass('mobile')) {\n\n            var collapse=$(this).parent().find('.tab-content');\n\n            //if( !collapse.hasClass('in') ) collapse.collapse('show');\n            collapse.collapse('toggle');\n\n        }\n\n    });\n\n    // BS tab shown event\n    $('.tab-nav li').on('shown.bs.tab', function(event) {\n\n        // Update active classes\n        $(event.target).siblings().removeClass('active');\n        $(event.target).addClass('active');\n\n        if ($(event.target).attr('data-id') &&  window.location.hash!=\"#\"+$(event.target).attr('data-id') ) {\n\n            // Update hash\n            window.location.hash = $(event.target).attr('data-id');\n\n        } else {\n\n            // Manually invoke refresh\n            readHash();\n\n        }\n\n    });\n\n    // BS collpase show event to trigger accordion effect\n    $('.sa-collapse-tabs .tab-content').on('show.bs.collapse', function() {\n\n        $(this).parent().siblings().find('.tab-content.in').collapse('hide');\n\n        $(event.target).parent().addClass('active');\n\n    });\n\n    $('.sa-collapse-tabs .tab-content').on('hidden.bs.collapse', function(event) {\n\n        $(event.target).parent().removeClass('active');\n\n        if( !$(this).parents('.sa-collapse-tabs').find('.tab-pane.active').length ){\n          $(this).parents('.sa-collapse-tabs').find('.tab-nav .active').removeClass('active');\n          $(this).parents('.sa-collapse-tabs').data('index',-1);\n        }\n\n    });\n\n\n    // BS collapse shown event to update hash\n    $('.sa-collapse-tabs .tab-content').on('shown.bs.collapse', function() {\n\n        var index = $(this).parent().index();\n\n        var hash = $(this).parents('.sa-collapse-tabs').find('.tab-nav li').eq(index).attr('data-id') || false;\n\n        if(\"#\"+hash==window.location.hash){\n          readHash();\n        }else{\n          window.location.hash = hash;\n        }\n\n    });\n\n\n    // Add collapse classes\n    $('.sa-collapse-tabs .tab-content').addClass('collapse');\n\n    // Add resize listener\n    $STAN.on('resize', CollapseTab );\n\n    // Set hashchange event\n    $(window).on('hashchange', readHash);\n\n    CollapseTab();\n\n    readHash();\n\n});\n",
    "/* ========================================================================\n * STAN Utils: Tooltip Popovers\n * Author: Andrew Womersley\n * ========================================================================*/\n\n$(function() {\n\n    'use strict';\n\n    // Declare id;\n    var id;\n\n    // Auto init BS tooltips\n    $('.sa-tooltip').each(function() {\n\n        id = 'tooltip' + Math.floor((Math.random() * 10000));\n\n        $(this).attr({\n            id: id,\n            'data-container': '#' + id\n        }).tooltip();\n\n    });\n\n    // Auto init BS popovers\n    $('.sa-popover').each(function() {\n\n        id = 'popover' + Math.floor((Math.random() * 10000));\n\n        $(this).attr({\n            id: id,\n            'data-container': '#' + id\n        }).popover();\n\n    });\n\n});\n",
    "/* ========================================================================\n * STAN Utils: Touch Hover\n * Author: Andrew Womersley\n * ======================================================================== */\n\n$(function() {\n\n    'use strict';\n\n    var $this;\n\n    if (!(\"ontouchstart\" in document.documentElement)){\n        $('html').addClass('no-touch');\n        $STAN.touch=false;\n    }else{\n        $('html').addClass('touch');\n        $STAN.touch=true;\n    }\n\n    $('html:not(.no-touch) .touch-hover').bind('click touchend', function(event) {\n\n        if ($(this).hasClass('hover')) {\n\n            event.stopPropagation();\n            return true;\n\n        } else {\n\n            $this = $(this);\n\n            $('.hover').each(function() {\n                if (!$(this).has($this).length) $(this).removeClass('hover');\n            });\n\n            $this.addClass('hover');\n            event.preventDefault();\n            event.stopPropagation();\n\n        }\n\n    });\n\n    $('html').on(\"click touchend\", \":not(.touch-hover)\", function(event) {\n        $('*').removeClass('hover');\n    });\n\n});\n",
    "/* ========================================================================\n * STAN Utils: Helpers\n * Author: Andrew Womersley\n * ======================================================================== */\n\n$(function() {\n\n    'use strict';\n\n    // Stop parent scroll\n    $('.stop-parent-scroll').on('mousewheel touchend', function(event) {\n\n      var dir = event.originalEvent.wheelDelta;\n      var $t = $(this);\n\n      if (dir > 0 && $t.scrollTop() === 0) {\n        event.preventDefault();\n      }\n\n      if (dir < 0 && ($t.scrollTop() == $t.get(0).scrollHeight - $t.innerHeight())) {\n        event.preventDefault();\n      }\n\n      event.stopPropagation();\n\n    });\n\n    $('.stop-parent-scroll').on('touchstart', function(event) {\n\n      var touch = event.originalEvent.touches[0] || event.originalEvent.changedTouches[0];\n\n      $(this).data('pageY',touch.pageY);\n\n    });\n\n    $('.stop-parent-scroll').on('touchmove', function(event) {\n\n      event.preventDefault();\n\n      event.stopPropagation();\n\n      var touch = event.originalEvent.touches[0] || event.originalEvent.changedTouches[0];\n\n      var move=($(this).data('pageY')-touch.pageY)/5;\n\n      $(this).scrollTop( $(this).scrollTop()+move );\n\n    });\n\n\n    // Set pixel ratio\n    var pxRatio = !! window.devicePixelRatio ? window.devicePixelRatio : 1;\n\n    if (pxRatio > 1) $('body').addClass('x2');\n\n});\n",
    "/* ========================================================================\n * STAN Utils: AnchorNav\n * Author: Andrew Womersley\n * ======================================================================== */\n\n(function($, $STAN) {\n\n    'use strict';\n\n    // Define Methods\n    var methods = {\n\n        init: function(options) {\n\n            var _this = this;\n\n            // Iterate Through Selectors\n            return this.each(function(index) {\n\n                // Set this\n                var $this = $(this);\n\n                // Set Options\n                var settings = $.extend({\n                    items: 'h2',\n                    add_li_active_class:false,\n                    add_a_active_class:true,\n                    attribute:'id',\n                    navHTML: \"<li><a href='#{id}'>{text}</a></li>\",\n                }, options);\n\n\n                // Save settings\n                $this.data('AnchorNav', settings);\n\n                // Set regexp for html tag replace\n                var regexpid = new RegExp('{id}', 'g');\n\n                // Set regexp for html tag replace\n                var regexptext = new RegExp('{text}', 'g');\n\n                var html, id, text;\n\n                // Find Controllers and Set Listeners\n                $(settings.items).each(function() {\n\n                    text = !! $(this).attr('data-nav-text') ? $(this).attr('data-nav-text') : $(this).text();\n\n                    id=text.replace(/\\W/g, '-').toLowerCase();\n\n                    $(this).attr(settings.attribute,id);\n\n                    html = settings.navHTML.replace(regexpid, id);\n                    html = html.replace(regexptext, text);\n\n                    $this.append(html);\n\n                });\n\n                if(settings.add_li_active_class){\n                    $this.find('li').click(function(){\n                        $this.find('li').removeClass('active');\n                        $(this).addClass('active');\n                    });\n                }\n\n                if(settings.add_a_active_class){\n                    $this.find('a').click(function(){\n                        $this.find('a').removeClass('active');\n                        $(this).addClass('active');\n                    });\n                }\n\n            });\n\n        }\n\n    };\n\n    $.fn.AnchorNav = function(method) {\n\n        if (methods[method]) {\n\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n\n        }\n        else if (typeof method === 'object' || !method) {\n\n            return methods.init.apply(this, arguments);\n\n        }\n        else {\n\n            $.error('Method ' + method + ' does not exist on jQuery.Datatable');\n\n        }\n\n    };\n\n}(jQuery, $STAN));\n",
    "/* ========================================================================\n * STAN Utils: ClassSwitcher\n * Author: Andrew Womersley\n * ======================================================================== */\n\n(function($, $STAN) {\n\n    'use strict';\n\n    // Click Listeners\n    $(window).ready(function() {\n\n        // Set click listener\n        $(\"body\").on(\"click\", \"[data-toggle='class-switcher']\", function() {\n\n            methods.setClass.apply($(this).attr('data-target'), [$(this).attr('data-class')]);\n\n        });\n\n    });\n\n    // Define Methods\n    var methods = {\n\n        init: function(options) {\n\n            // Add selector to options\n            options.target = this.selector;\n\n            // Iterate Through Selectors\n            return this.each(function(index) {\n\n                // Set this\n                var $this = $(this);\n\n                // Set Options\n                var settings = $.extend({\n                    selector: 'div',\n                    currentClass: ''\n                }, options);\n\n\n                // Save settings\n                $this.data('ClassSwitcher', settings);\n\n                // Check for active\n                if ($(\"[data-toggle='class-switcher'][data-target='\" + settings.target + \"'].active\").length) {\n\n                    // Apply classes from active element\n                    methods.setClass.apply($this, [$(\"[data-toggle='class-switcher'][data-target='\" + settings.target + \"'].active\").attr('data-class')]);\n\n                } else {\n\n                    // Apply classes from first element\n                    methods.setClass.apply($this, [$(\"[data-toggle='class-switcher'][data-target='\" + settings.target + \"']\").eq(0).attr('data-class')]);\n\n                }\n\n            });\n\n        },\n\n        setClass: function(_Class) {\n\n            // Get settings\n            var settings = $(this).data('ClassSwitcher');\n            var $this = $(this);\n\n            // If _Class is set remove and update currentClass\n            if (_Class) {\n\n                // remoce currentClass\n                $this.find(settings.selector).removeClass(settings.currentClass);\n\n                // Update currentClass\n                settings.currentClass = _Class;\n\n            }\n\n            // Add currentClass to selectors\n            $this.find(settings.selector).addClass(settings.currentClass);\n\n            // Update active classes\n            $(\"[data-toggle='class-switcher'][data-target='\" + settings.target + \"']\").removeClass('active');\n            $(\"[data-toggle='class-switcher'][data-target='\" + settings.target + \"'][data-class='\" + settings.currentClass + \"']\").addClass('active');\n\n            // Trigger event\n            $(this).trigger('change.sa.class-switcher', [settings]);\n\n\n\n        }\n\n    };\n\n    $.fn.ClassSwitcher = function(method) {\n\n        if (methods[method]) {\n\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n\n        } else if (typeof method === 'object' || !method) {\n\n            return methods.init.apply(this, arguments);\n\n        } else {\n\n            $.error('Method ' + method + ' does not exist on jQuery.Datatable');\n\n        }\n\n    };\n\n}(jQuery, $STAN));\n",
    "/* ========================================================================\n * STAN Utils: Colousel\n * Author: Andrew Womersley\n * ======================================================================== */\n\n(function($, $STAN) {\n\n    'use strict';\n\n    // Define Global Vars\n    var Selectors = [];\n\n    $STAN.on('resize',function() {\n\n        if (!Selectors.length) return;\n\n            $(Selectors).each(function() {\n\n                // Resize check\n                methods.resize.apply(this);\n\n            });\n\n    });\n\n    // Click Listeners\n    $(window).ready(function() {\n\n        // Next\n        $(\"[data-toggle='colousel.next']\").click(function() {\n\n            return methods.move.apply($($(this).attr('data-target')), ['next', true]);\n\n        });\n\n        // Prev\n        $(\"[data-toggle='colousel.prev']\").click(function() {\n\n            return methods.move.apply($($(this).attr('data-target')), ['prev', true]);\n\n        });\n\n        // Set Index\n        $(\"[data-toggle='colousel.set']\").click(function() {\n\n            return methods.set_index.apply($($(this).attr('data-target')), [parseInt($(this).attr('data-index')), true]);\n\n        });\n\n    });\n\n\n    // Define Methods\n    var methods = {\n\n        init: function(options) {\n\n            // Save selector in array\n            $(this.selector).each(function(){\n\n                Selectors.push( $(this) );\n\n            });\n\n            // Iterate Through Selectors\n            return this.each(function(index) {\n\n                // Set this\n                var $this = $(this);\n\n                // Set Options\n                var settings = $.extend({\n                    type:'normal',\n                    selector: 'div',\n                    selector_class: false,\n                    transition_speed: 300,\n                    autoplay: false,\n                    autoplay_delay: 5000,\n                    break_autoplay_on_click: true,\n                    scroll_amount: {\n                        xs: 1,\n                        sm: 1,\n                        md: 1,\n                        lg: 1\n                    },\n                    max_in_view:0,\n                    current_index: 0,\n                    autoplay_method: 'next',\n                    selector_width: 0,\n                    max_index: 0,\n                    timer: false,\n                    action: false,\n                    isScroll:false,\n                    _inc_value:false,\n                }, options);\n\n                if(settings.type=='normal'){\n\n                  settings.transition='slide';\n                  settings.continuous=false;\n\n                }else if(settings.type=='continuous'){\n\n                  settings.transition='slide';\n                  settings.continuous=true;\n\n                }else{\n\n                  settings.transition='fade';\n                  settings.continuous=true;\n\n                }\n\n                // Save settings\n                $this.data('Colousel', settings);\n\n\n                var $Selectors = $this.find('.colousel-inner').children(settings.selector);\n\n                // Calculate total\n                settings.total = $Selectors.length;\n\n                // Duplicate selectors if not enough\n                if(settings.continuous){\n\n                  if(settings.total>settings.max_in_view && settings.total<(settings.max_in_view*2)){\n\n                    $this.find('.colousel-inner').append($this.find('.colousel-inner').html());\n\n                    settings.total=settings.total*2;\n                    $Selectors = $this.find('.colousel-inner').children(settings.selector);\n\n                  }\n\n                }\n\n                // Add classes\n                if (settings.selector_class) $Selectors.addClass(settings.selector_class);\n\n                // Loop through selectors\n                $Selectors.each(function(index) {\n\n                    // Set index position\n                    $(this).data('ColouselIndex', index);\n\n                });\n\n                // Click handler for next\n                $this.find('.colousel-next').click(function(event) {\n\n                    methods.move.apply($this, ['next', true]);\n\n                });\n\n                // Click handler for prev\n                $this.find('.colousel-prev').click(function(event) {\n\n                    methods.move.apply($this, ['prev', true]);\n\n                });\n\n                // Do resize\n                methods.resize.apply($this);\n\n                // Set autoplay timer\n                methods.autoplay.apply($this);\n\n            });\n\n        },\n\n        autoplay: function() {\n\n            // Load settings\n            var settings = $(this).data('Colousel');\n\n            // Set this\n            var $this = $(this);\n\n            if (settings.autoplay) {\n\n                // Calculate which method to call\n                if (settings.current_index == settings.max_index && !settings.continuous) {\n                    settings.autoplay_method = 'prev';\n                }\n                else if (settings.current_index === 0 && settings.autoplay_method == 'prev') {\n                    settings.autoplay_method = 'next';\n                }\n\n                // Set Timer\n                settings.timer = setTimeout(function() {\n\n                    methods.move.apply($this, [settings.autoplay_method, false]);\n\n                }, settings.autoplay_delay);\n\n            }\n\n        },\n\n        resize: function() {\n\n            // Load settings\n            var settings = $(this).data('Colousel');\n\n            // Set this\n            var $this = $(this);\n            var $Selectors = $this.find('.colousel-inner').children(settings.selector);\n\n            // Reset vars\n            var height = 0;\n            var left = 0;\n            var inview_check = 0;\n            settings.inview = 0;\n\n            // Set selector width\n            $this.find('.colousel-inner').css('width','');\n            $Selectors.css('width','');\n            settings.selector_width = $Selectors.outerWidth();\n\n            // Loop through selectors\n            $Selectors.each(function(index) {\n\n                // Check height of current selector and set height if its larger\n                if ($(this).outerHeight() > height) height = $(this).outerHeight();\n\n                // Calculate left positoion\n                left = $(this).data('ColouselIndex') * settings.selector_width;\n\n                // Set left position\n                $(this).css({left:left + 'px',width:$(this).css('width')});\n\n                // If left position is less than colousel width incriment in selectors in view\n                inview_check = inview_check + settings.selector_width;\n                if (inview_check <= $this.find('.colousel-inner').width() + 10) settings.inview++;\n\n            });\n\n            // Set height for container\n            $(this).css('height', height + 'px');\n\n            // Set start and end positions\n            settings.start_position = settings.selector_width * -1;\n            settings.end_position = settings.selector_width * settings.total;\n\n            // Set max_index\n            settings.max_index = settings.total - settings.inview;\n\n            // Check for device uses scroll\n            if(!settings.scroll_amount[$STAN.device]){\n\n              settings.isScroll=true;\n\n              $this.addClass('scroll');\n\n              $this.find('.colousel-inner').css('width',(settings.total*settings.selector_width)+'px');\n\n              $Selectors.each(function(index) {\n\n                  // Reset left position\n                  $(this).css('left', (index * settings.selector_width) + 'px');\n\n              });\n\n            }else{\n\n              settings.isScroll=false;\n\n              $this.removeClass('scroll');\n\n              if (settings.continuous) {\n\n                if(settings.total==settings.inview){\n\n                  $Selectors.each(function(index) {\n\n                    // Reset left position\n                    $(this).css('left', (index * settings.selector_width) + 'px');\n\n                  });\n\n                  $(this).addClass('start end');\n\n                }else{\n\n                  $(this).removeClass('start end');\n\n                }\n\n              }\n\n              if (!settings.continuous) {\n\n                  // Check current_index isnt above maximum position\n                  if (settings.current_index > settings.max_index) settings.current_index = settings.max_index;\n\n                  // Move slider to current position\n                  if (settings.current_index > 0) {\n\n                      var offset = settings.current_index * settings.selector_width;\n                      $Selectors.css('left', '-=' + offset + 'px');\n\n                  }\n\n                  // Check start position\n                  if (settings.current_index === 0) $(this).addClass('start');\n                  else $(this).removeClass('start');\n\n                  // Check end position\n                  if (settings.current_index >= settings.max_index) $(this).addClass('end');\n                  else $(this).removeClass('end');\n\n              }\n\n            }\n\n        },\n\n        set_index: function(index){\n\n          var settings = $(this).data('Colousel');\n          var direction = false;\n          var inc_value = 0;\n\n          if(index>settings.current_index){\n            direction='next';\n            inc_value=index-settings.current_index;\n          }else if(index<settings.current_index){\n            direction='prev';\n            inc_value=settings.current_index-index;\n          }\n\n          if(direction){\n            settings._inc_value=inc_value;\n            methods.move.apply($(this), [direction, true]);\n          }\n\n        },\n\n        pre_move_checks: function(direction) {\n\n            // Load settings\n            var settings = $(this).data('Colousel');\n\n            // Set this\n            var $this = $(this);\n            var $Selectors = $this.find('.colousel-inner').children(settings.selector);\n\n            var inc_value;\n\n            if(settings._inc_value){\n              inc_value=settings._inc_value;\n              settings._inc_value=false;\n            }else{\n              inc_value = settings.scroll_amount[$STAN.device];\n            }\n\n            if (!inc_value) inc_value=1;\n\n            if (!settings.continuous) {\n\n                // Incriment current position\n\n                var diff = 0;\n\n                if (direction == 'next') {\n                    settings.current_index = settings.current_index + inc_value;\n                    if (settings.current_index > settings.max_index) {\n                        diff = settings.current_index - settings.max_index;\n                        settings.current_index = settings.max_index;\n                    }\n\n                }\n                else {\n                    settings.current_index = settings.current_index - inc_value;\n                    if (settings.current_index < 0) {\n                        diff = 0 - settings.current_index;\n                        settings.current_index = 0;\n                    }\n                }\n                var move_amount = inc_value - diff;\n                settings._distance = move_amount * settings.selector_width;\n                settings._speed = move_amount * settings.transition_speed;\n\n            }\n\n            // If continuous - reposition selectors\n            if (settings.continuous) {\n\n                // Loop through selectors\n                $Selectors.each(function() {\n\n                    // Get index position\n                    var $index = $(this).data('ColouselIndex');\n\n                    if (direction == 'next') {\n\n                        if ($index < 0) {\n                            var offset = 0 - $index;\n                            // Reset index and left position\n                            $index = settings.total - offset;\n                            $(this).css('left', (settings.end_position - (settings.selector_width * offset)) + 'px');\n\n                        }\n\n                        $index = $index - inc_value;\n\n                    }\n\n                    if (direction == 'prev') {\n\n                        $index = $index + inc_value;\n\n                        if ($index >= settings.total) {\n                            var offset = $index - settings.total;\n                            // Reset index and left position\n                            $index = offset;\n                            offset = inc_value - offset;\n                            $(this).css('left', '-' + (settings.selector_width * offset) + 'px');\n\n                        }\n\n                    }\n\n                    // Save index position\n                    $(this).data('ColouselIndex', $index);\n\n                });\n\n                settings._distance = inc_value * settings.selector_width;\n                settings._speed = inc_value * settings.transition_speed;\n\n            }\n\n        },\n\n        move: function(direction, isClick) {\n\n            // Load settings\n            var settings = $(this).data('Colousel');\n\n            // Set this\n            var $this = $(this);\n            var $Selectors = $this.find('.colousel-inner').children(settings.selector);\n            var left_modifier;\n\n            if (direction == 'next') left_modifier = '-';\n            else left_modifier = '+';\n\n\n            if (((settings.continuous && settings.total>settings.inview) || (settings.current_index < settings.max_index && direction == 'next') || (settings.current_index > 0 && direction == 'prev')) && !settings.action && !settings.isScroll) {\n\n                // Set action\n                settings.action = true;\n\n                // If isClick and beak delay on click - break autplay\n                if (isClick && settings.break_autoplay_on_click) settings.autoplay = false;\n\n                // If isClick - set autoplay method to follow click action\n                if (isClick) settings.autoplay_method = direction;\n\n                // Clear timer\n                clearTimeout(settings.timer);\n\n                // Positon checks\n                methods.pre_move_checks.apply($this, [direction]);\n\n                // Call method for transition type\n                methods[settings.transition].apply($this, [left_modifier]);\n\n                // Trigger\n                $(this).trigger(direction + '.sa.colousel', [settings]);\n\n            }\n\n        },\n\n        slide: function(left_modifier){\n\n          // Load settings\n          var settings = $(this).data('Colousel');\n\n          // Set this\n          var $this = $(this);\n          var $Selectors = $this.find('.colousel-inner').children(settings.selector);\n\n          // Animate selectors left\n          $Selectors.animate({\n              left: left_modifier + '=' + settings._distance + 'px'\n          }, settings._speed);\n\n          setTimeout(function() {\n\n              // Set action\n              settings.action = false;\n\n              methods.resize.apply($this);\n\n              // Reset autoplay timer\n              methods.autoplay.apply($this);\n\n\n          }, settings._speed + 50);\n\n        },\n\n        fade: function(left_modifier){\n\n          // Load settings\n          var settings = $(this).data('Colousel');\n\n          // Set this\n          var $this = $(this);\n          var $Selectors = $this.find('.colousel-inner').children(settings.selector);\n\n          $this.find('.colousel-inner').animate({\n              opacity:0\n          }, settings._speed,function(){\n\n            $Selectors.each(function(){\n              $(this).css('left',left_modifier + '=' + settings._distance + 'px');\n            });\n\n            $this.find('.colousel-inner').animate({\n              opacity:1\n            }, settings._speed);\n\n          });\n\n          setTimeout(function() {\n\n              // Set action\n              settings.action = false;\n\n              methods.resize.apply($this);\n\n              // Reset autoplay timer\n              methods.autoplay.apply($this);\n\n\n          }, (settings._speed*2) + 50);\n\n        },\n\n        next: function() {\n\n            methods.move.apply($this, ['next', true]);\n\n        },\n\n        prev: function() {\n\n            methods.move.apply($this, ['prev', true]);\n\n        }\n\n    };\n\n    $.fn.Colousel = function(method) {\n\n        if (methods[method]) {\n\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n\n        }\n        else if (typeof method === 'object' || !method) {\n\n            return methods.init.apply(this, arguments);\n\n        }\n        else {\n\n            $.error('Method ' + method + ' does not exist on jQuery.Datatable');\n\n        }\n\n    };\n\n}(jQuery, $STAN));\n",
    "/* ========================================================================\n * STAN Utils: DOMovr\n * Author: Andrew Womersley\n * ======================================================================== */\n\n(function($, $STAN) {\n\n    'use strict';\n\n    // Define Global Vars\n    var Selectors = [];\n\n    // Resize Listener for resizing slideshow height\n    $STAN.on('resize',function() {\n\n        if (!Selectors.length) return;\n\n        $(Selectors).each(function() {\n\n            // Resize check\n            methods.resize.apply(this);\n\n        });\n\n    });\n\n\n    // Define Methods\n    var methods = {\n\n        init: function(options) {\n\n            // Save selector in array\n            $(this.selector).each(function(){\n\n                Selectors.push( $(this) );\n\n            });\n\n            // Iterate Through Selectors\n            return this.each(function() {\n\n                // Set Options\n                var settings = $.extend({\n                    xs: false,\n                    sm: false,\n                    md: false,\n                    lg: false,\n                    current_holder: false\n                }, options);\n\n\n                if(settings.xs && settings.sm && !settings.md && !settings.lg){\n                  settings.md = settings.lg = settings.sm;\n                }\n\n                if(!settings.xs && settings.sm && settings.md && !settings.lg){\n                  settings.xs = settings.sm;\n                  settings.md = settings.lg;\n                }\n\n                if(!settings.xs && !settings.sm && settings.md && settings.lg){\n                  settings.xs = settings.sm = settings.md;\n                }\n\n                // Set Options\n                $(this).data('DOMovr', settings);\n\n                // Do resize\n                methods.resize.apply(this);\n\n            });\n\n        },\n\n        resize: function() {\n\n            var settings = $(this).data('DOMovr');\n\n            var element = settings[$STAN.device];\n\n            if (element && element != settings.current_holder) {\n\n                var $this = $(this).detach();\n\n                $(settings.current_holder).removeClass('active');\n\n                $(element).html($this).addClass('active');\n\n                settings.current_holder = element;\n\n                // Trigger\n                $(this).trigger('moved.sa.domovr', [settings]);\n\n            }\n\n        }\n\n    };\n\n    $.fn.DOMovr = function(method) {\n\n        if (methods[method]) {\n\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n\n        }\n        else if (typeof method === 'object' || !method) {\n\n            return methods.init.apply(this, arguments);\n\n        }\n        else {\n\n            $.error('Method ' + method + ' does not exist on jQuery.Datatable');\n\n        }\n\n    };\n\n}(jQuery, $STAN));\n",
    "/* ========================================================================\n * STAN Utils: Filter\n * Author: Andrew Womersley\n * ======================================================================== */\n\n(function($, $STAN) {\n\n    'use strict';\n\n    // Define Global Vars\n    var Selectors = [];\n\n    $STAN.on('resize',function() {\n\n        if (!Selectors.length) return;\n\n        $(Selectors).each(function() {\n\n            // Resize check\n            methods.filter.apply(this, [false]);\n\n        });\n\n    });\n\n    // Define Methods\n    var methods = {\n\n        init: function(options) {\n\n            // Iterate Through Selectors\n            return this.each(function(index) {\n\n                // Save selector in array\n                Selectors.push($(this));\n\n                // Add controller class\n                $(this).addClass('sa-filter');\n\n                // Set this\n                var $this = $(this);\n                var i, layer;\n\n                // Set Options\n                var settings = $.extend({\n                    selector: 'div',\n                    activeClass: 'active',\n                    inactiveClass: 'inactive',\n                    setNav: false,\n                    navHolder: '.filternav',\n                    navHTML: '<li data-tag=\"{tag}\">{tag} <span></span><i class=\"sa-on fa fa-times\"></i><i class=\"sa-off fa fa-check\"></i></li>',\n                    resultsPerPage: {\n                        xs: 4,\n                        sm: 6,\n                        md: 8,\n                        lg: 10\n                    },\n                    currentTags: [],\n                    currentPage: 1,\n                }, options);\n\n                // Save settings\n                $this.data('Filter', settings);\n\n                // set Navigation\n                if (settings.setNav) methods.setNav.apply(this);\n\n                // Update matches\n                methods.getMatches.apply(this);\n\n                // Set active classes from hash\n                methods.getHash.apply(this);\n\n                // Do filter\n                methods.filter.apply($this);\n\n                // Add click listeners to navigation\n                $(settings.navHolder).find('[data-tag]').click(function() {\n\n                    // Update filter\n                    methods.updateTags.apply($this, [$(this)]);\n\n                });\n\n                // Add click listeners to load more\n                $this.find('.sa-load').click(function() {\n\n                    // Incriment current page\n                    settings.currentPage++;\n\n                    // Update filter\n                    methods.filter.apply($this);\n\n                    // Remove focus from button\n                    $(this).blur();\n\n                });\n\n                // Set hashchange event\n                $(window).on('hashchange', function() {\n\n                    // Reset pages to 1\n                    settings.currentPage = 1;\n\n                    // Update filter\n                    methods.getHash.apply($this);\n\n                });\n\n                // Show filter holder\n                setTimeout(function() {\n                    $this.css('visibility', 'visible');\n                }, 500);\n\n            });\n\n        },\n\n        updateTags: function(tag) {\n\n            // Get settings and set this\n            var settings = $(this).data('Filter');\n            var $this = $(this);\n\n            // Tigger pre filter event\n            $(this).trigger('pre.sa.filter', [settings]);\n\n            // Check if tag is in currentTags\n            var index = $.inArray(tag.attr('data-tag'),settings.currentTags);\n\n            if(index>=0){\n\n                // Remove tag\n                settings.currentTags.splice(index, 1);\n\n            }else{\n\n                // Add tag\n                settings.currentTags.push(tag.attr('data-tag'));\n\n            }\n\n            // Update hash\n            window.location.hash=settings.currentTags.join('|').replace(/ /g,'+');\n\n        },\n\n        getHash:function(){\n\n            // Get settings and set this\n            var settings = $(this).data('Filter');\n            var $this = $(this);\n\n            // Declare some vars\n            var x;\n\n            // Get tags from hash and explode at pipes\n            var tags=window.location.hash.substring(1).split(\"|\");\n\n            // Reset currentTags\n            settings.currentTags=[];\n\n            // Clear active classes\n            $(settings.navHolder).find(\"[data-tag]\").removeClass('active');\n\n            // If tags is set\n            if(tags[0]){\n\n                for(x in tags){\n\n                    // Add active class to nav element\n                    $(settings.navHolder).find(\"[data-tag='\"+tags[x]+\"']\").addClass('active');\n\n                    // Add tag to currentTags array\n                    settings.currentTags.push(tags[x]);\n\n                }\n\n            }\n\n            // Do filter\n            methods.filter.apply($this);\n\n        },\n\n        filter: function() {\n\n            // Get settings and set this\n            var settings = $(this).data('Filter');\n            var $this = $(this);\n\n            // Declare some vars\n            var display, tags, x;\n\n            // Set maximum results\n            var Results = settings.resultsPerPage[$STAN.device] * settings.currentPage;\n\n            // Set matches to zero\n            var matches = 0;\n\n            // Loop through selectors\n            $this.find(settings.selector).each(function(index) {\n\n                // Get selectors tags\n                tags = $(this).attr('data-tags').split(\",\");\n\n                // Set display to false\n                display = false;\n\n                // If no filters are set - set display to true\n                if (!settings.currentTags.length) display = true;\n\n                for (var x in tags) {\n\n                    // If selector has active filter - set display to true\n                    if ($.inArray(tags[x],settings.currentTags) >= 0) display = true;\n\n                }\n\n                // Incriment matches if display=true\n                if (display) matches++;\n\n                // Add/remove activate and inactive classes from filters depending on display\n                if (display && matches <= Results) {\n                    $(this).addClass(settings.activeClass).removeClass(settings.inactiveClass);\n                } else {\n                    $(this).removeClass(settings.activeClass).addClass(settings.inactiveClass);\n                }\n\n            });\n\n            // Show/hide load more button depending on number of results\n            if (matches <= Results) {\n                $this.find('.sa-load').css('display', 'none');\n            } else {\n                $this.find('.sa-load').css('display', 'block');\n            }\n\n            // Tigger post filter event\n            $(this).trigger('post.sa.filter', [settings]);\n\n        },\n\n        setNav: function() {\n\n            // Get settings and set this\n            var settings = $(this).data('Filter');\n            var $this = $(this);\n\n            // Set tags array\n            var Tags = [];\n\n            // Declare some vars\n            var html, tags, tagexp, labelexp, x;\n\n            // Loop through selectors and get all tags\n            $this.find(settings.selector).each(function() {\n\n                // Get tags from attribute\n                tags = $(this).attr('data-tags').split(\",\");\n\n                for (var x in tags) {\n\n                    // Add tag to array if not already added\n                    if ($.inArray(tags[x],Tags) < 0 && tags[x]) Tags.push(tags[x]);\n\n\n\n                }\n\n            });\n\n            // Sort tags in alphabetical order\n            Tags.sort();\n\n            // Set regexp for html tag replace\n            tagexp = new RegExp('{tag}', 'g');\n            labelexp = new RegExp('{label}', 'g');\n\n            // Loop though tags\n            for (x in Tags) {\n\n                // Replace tag name in HTML string\n                html = settings.navHTML.replace(tagexp, Tags[x]);\n                html = html.replace(labelexp, decodeURIComponent(Tags[x].replace(/\\+/g, ' ')));\n\n                // Add HTML to nav\n                $(settings.navHolder).append(html);\n\n            }\n\n        },\n\n        getMatches: function() {\n\n            // Get settings and set this\n            var settings = $(this).data('Filter');\n            var $this = $(this);\n\n            // Loop through navigation and update matches totals\n            $(settings.navHolder).find('[data-tag]').each(function() {\n\n                $(this).find('span').text($this.find('[data-tags*=\"' + $(this).attr('data-tag') + '\"]').length);\n\n            });\n\n        }\n\n    };\n\n    $.fn.Filter = function(method) {\n\n        if (methods[method]) {\n\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n\n        } else if (typeof method === 'object' || !method) {\n\n            return methods.init.apply(this, arguments);\n\n        } else {\n\n            $.error('Method ' + method + ' does not exist on jQuery.Datatable');\n\n        }\n\n    };\n\n}(jQuery, $STAN));\n",
    "/* ========================================================================\n* STAN Utils: FixedSize\n* Author: Andrew Womersley\n* ======================================================================== */\n\n(function($, $STAN) {\n\n  'use strict';\n\n  // Define Global Vars\n  var Selectors = [];\n\n  $STAN.on('resize',function() {\n\n    if (!Selectors.length) return;\n\n    $(Selectors).each(function() {\n\n      // Resize check\n      methods.fix.apply(this);\n\n    });\n\n  });\n\n\n  // Define Methods\n  var methods = {\n\n    init: function(options) {\n\n      // Save selector in array\n      $(this.selector).each(function(){\n\n        Selectors.push( $(this) );\n\n      });\n\n      // Iterate Through Selectors\n      return this.each(function() {\n\n        // Set this\n        var $this = $(this);\n\n        // Set Options\n        var settings = $.extend({\n          selector: 'div',\n          devices: {\n            xs: 0,\n            sm: 0,\n            md: 0,\n            lg: 0\n          }\n        }, options);\n\n        if(typeof settings.selector==='string') settings.selector=[settings.selector];\n\n        // Save settings\n        $this.data('FixedSize', settings);\n\n        // Do fix\n        methods.fix.apply(this);\n\n      });\n\n    },\n\n    fix: function() {\n\n      var settings = $(this).data('FixedSize');\n\n      for(var x in settings.selector){\n\n        methods.checkSize.apply(this,[settings.selector[x]]);\n\n      }\n\n      // Inititate event trigger\n      $(this).trigger('resize.sa.fixedsize', [settings]);\n\n\n    },\n\n    checkSize: function(selector){\n\n      var h = 0;\n      var t = [];\n      var lastTop, thisTop, newLine;\n\n      // Reset height of elements\n      $(this).find(selector).css('height', 'auto');\n\n      $(this).find(selector).each(function(index) {\n\n        thisTop=$(this).offset().top;\n\n        if(lastTop<thisTop+20 && lastTop>thisTop-20) newLine=false; else newLine=true;\n        if(newLine && h>0){\n\n          for (var x in t) $(t[x]).css('height', h + 'px');\n          h = 0;\n          t = [];\n        }\n\n        if ($(this).outerHeight() > h) h = $(this).outerHeight();\n        t.push(this);\n\n        lastTop=thisTop;\n\n      });\n\n      // Check for uncomplete row\n      if (h) {\n        for (var x in t) $(t[x]).css('height', h + 'px');\n      }\n\n    }\n\n  };\n\n  $.fn.FixedSize = function(method) {\n\n    if (methods[method]) {\n\n      return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n\n    }\n    else if (typeof method === 'object' || !method) {\n\n      return methods.init.apply(this, arguments);\n\n    }\n    else {\n\n      $.error('Method ' + method + ' does not exist on jQuery.Datatable');\n\n    }\n\n  };\n\n}(jQuery, $STAN));\n",
    "/* ========================================================================\n* STAN Utils: Popup\n* Author: Andrew Womersley\n* ======================================================================== */\n\n(function($, $STAN) {\n\n  'use strict';\n\n  // Define Global Vars\n  var Selectors = [];\n\n  $STAN.on('resize',function() {\n\n    if (!Selectors.length) return;\n\n    $(Selectors).each(function() {\n\n      // Resize check\n      methods.resize.apply(this);\n\n    });\n\n  });\n\n  // Click Listeners\n  $(window).ready(function() {\n\n    // Show\n    $(\"[data-toggle='popup.show']\").click(function() {\n\n      var src=!! $(this).attr('data-src') ? $(this).attr('data-src') : $(this).attr('href');\n\n      methods.set_src.apply($($(this).attr('data-target')), [src]);\n\n      return methods.show.apply($($(this).attr('data-target')));\n\n    });\n\n    // Hide\n    $(\"[data-toggle='popup.hide']\").click(function() {\n\n      return methods.hide.apply($($(this).attr('data-target')));\n\n    });\n\n    // Toggle\n    $(\"[data-toggle='popup.toggle']\").click(function() {\n\n      var src=!! $(this).attr('data-src') ? $(this).attr('data-src') : $(this).attr('href');\n\n      methods.set_src.apply($($(this).attr('data-target')), [src]);\n\n      return methods.toggle.apply($($(this).attr('data-target')));\n\n    });\n\n  });\n\n\n  // Define Methods\n  var methods = {\n\n    init: function(options) {\n\n      // Save selector in array\n      $(this.selector).each(function(){\n\n        Selectors.push( $(this) );\n\n      });\n\n      // Iterate Through Selectors\n      return this.each(function(index) {\n\n        // Set this\n        var $this = $(this);\n\n        // Set Options\n        var settings = $.extend({\n          type: 'html',\n          src: 'about:blank',\n          width: 200,\n          height: 300,\n          gutter: 15,\n          open: false,\n          auto_reopen: true,\n          lock_aspect_ratio: true,\n          scroll: true,\n          devices: {\n            xs: true,\n            sm: true,\n            md: true,\n            lg: true\n          }\n        }, options);\n\n        // Unlock aspect ratio for variable heights\n        if( settings.height=='auto') settings.lock_aspect_ratio=false;\n\n        // Save settings\n        $this.data('PopUp', settings);\n\n        // Scroll settings\n        var _scroll = (settings.scroll) ? 'yes' : 'no';\n        var _class = (settings.scroll) ? '' : 'no-scroll';\n\n\n        // Set HTML/iFrame/Classes\n        if (settings.type == 'iframe') {\n\n          $this.find('.popup-content').addClass('no-scroll');\n          $this.find('.popup-content').html(\"<iframe src='about:blank' class='\" + _class + \"' style='width:100%;height:100%;' seamless frameborder='0' scrolling='\" + _scroll + \"'></iframe>\");\n\n        }\n        else {\n\n          $this.find('.popup-content').addClass(_class);\n\n        }\n\n        // Set close listener\n        $this.click(function() {\n\n          methods.hide.apply($this);\n\n        });\n\n        $this.find('.popup-close').click(function(event) {\n\n          methods.hide.apply($this);\n          event.stopPropagation();\n\n        });\n\n        $this.find('.popup-content').click(function(event) {\n\n          event.stopPropagation();\n\n        });\n\n        // Show if open and allowed on current device\n        if (settings.open && settings.devices[$('body').attr('data-current-device')]) {\n\n          $(this).css('display', 'block');\n\n        }\n\n        $this.on('resize.sa.popup',function(){\n          methods.resize.apply( $(this) );\n        });\n\n        // Do resize\n        methods.resize.apply(this);\n\n      });\n\n    },\n\n    show: function() {\n\n      var settings = $(this).data('PopUp');\n\n      if (!settings.open) {\n\n        if (settings.devices[$STAN.device]) {\n\n          if (settings.type == 'iframe') {\n\n            // Set iFrame source\n            $(this).find('iframe').attr('src', settings.src);\n\n          }else if (settings.type == 'ajax') {\n\n            // Load ajax content\n            $(this).find('.popup-display').css('opacity',0);\n            $(this).find('.popup-content').load(settings.src,function(){\n\n              $(this).parent().animate({opacity:1},300);\n\n            });\n\n          }\n\n          // Display Popup\n          $(this).css({display:'block',opacity:0}).animate({opacity:1},300);\n\n          // Do resize\n          methods.resize.apply(this);\n\n          // Set open to true\n          settings.open = true;\n\n          // Trigger\n          $(this).trigger('show.sa.popup', [settings]);\n\n          // Return false to stop default action\n          return false;\n\n        }\n        else {\n\n          // Return true to allow default action\n          return true;\n\n        }\n\n      }\n      else {\n\n        return false;\n\n      }\n\n    },\n\n    hide: function() {\n\n      var settings = $(this).data('PopUp');\n\n      if (settings.open) {\n\n        // Close Popup\n        $(this).animate({opacity:0},300,function(){\n          $(this).css('display', 'none');\n        });\n\n        // Unset iFrame src\n        if (settings.type == 'iframe'){\n          $(this).find('iframe').attr('src', 'about:blank');\n        }else if (settings.type == 'ajax'){\n          $(this).find('.popup-content').html('');\n        }\n\n        // Set open to false\n        settings.open = false;\n\n        // Trigger\n        $(this).trigger('hide.sa.popup', [settings]);\n\n      }\n\n      // Return false to stop default action\n      return false;\n\n    },\n\n    toggle: function(src) {\n\n      var settings = $(this).data('PopUp');\n\n      if (settings.open) return methods.hide.apply(this);\n      else return methods.show.apply(this, [src]);\n\n    },\n\n    resize: function() {\n\n      var settings = $(this).data('PopUp');\n\n      // Resize to fit\n      var w = $(window).width() - (2 * settings.gutter);\n      var h = $(window).height() - (2 * settings.gutter);\n\n      if( settings.height=='auto'){\n        $(this).find('.popup-display').css('height','auto');\n        var ah=$(this).find('.popup-display').outerHeight();\n        if (h > ah) h = ah;\n      }else{\n        if (h > settings.height) h = settings.height;\n      }\n\n      if (w > settings.width) w = settings.width;\n\n      if (settings.lock_aspect_ratio) {\n        if ((w / h) > (settings.width / settings.height)) w = settings.width * (h / settings.height);\n        else h = settings.height * (w / settings.width);\n      }\n\n      $(this).find('.popup-display').css({\n        width: w + 'px',\n        height: h + 'px',\n        marginTop: '-' + (h / 2) + 'px',\n        marginLeft: '-' + (w / 2) + 'px'\n      });\n\n      // Check if device has changed\n      if (!settings.devices[$STAN.device] && settings.open) {\n        settings.reopen = true;\n        methods.hide.apply(this);\n      }\n      else if (settings.devices[$STAN.device] && settings.reopen && settings.auto_reopen) {\n        settings.reopen = false;\n        methods.show.apply(this);\n      }\n\n    },\n\n    set_src: function(src) {\n\n      var settings = $(this).data('PopUp');\n\n      if (src) settings.src = src;\n\n    }\n\n  };\n\n  $.fn.PopUp = function(method) {\n\n    if (methods[method]) {\n\n      return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n\n    }\n    else if (typeof method === 'object' || !method) {\n\n      return methods.init.apply(this, arguments);\n\n    }\n    else {\n\n      $.error('Method ' + method + ' does not exist on jQuery.Datatable');\n\n    }\n\n  };\n\n}(jQuery, $STAN));\n",
    "/* ========================================================================\n * STAN Utils: PredInput\n * Author: Andrew Womersley\n * ======================================================================== */\n\n(function($, $STAN) {\n\n    'use strict';\n\n    // Define Methods\n    var methods = {\n\n        init: function(options) {\n\n            // Iterate Through Selectors\n            return this.each(function(index) {\n\n                // Set this\n                var $this = $(this);\n\n                // Set Options\n                var settings = $.extend({\n\n                    search_url: '',\n                    http_request: 'GET',\n                    data: [],\n                    searching: false\n\n                }, options);\n\n                // Save settings\n                $this.data('Predinput', settings);\n\n                // Turn off autocomplete on input box\n                $this.find('input').attr('autocomplete', 'off');\n\n                // Add Key press listeners\n                $this.find('input').keyup(function(event) {\n\n                    methods.keyup.apply($this, [event]);\n\n                });\n\n                // Stop return from submitting the form\n                $this.find('input').keydown(function(event) {\n\n                    if (event.keyCode == 13) event.preventDefault();\n\n                });\n\n                // Clear search\n                $this.find('.clear').click(function(event) {\n\n                    $this.find('input').val('');\n                    $(this).css('display', 'none');\n                    methods.hide_results.apply($this);\n                    $this.find('input').focus();\n\n                    // Trigger\n                    $this.trigger('clear.sa.predinput', [settings]);\n\n                });\n\n                // Stop propagtion on click\n                $this.click(function(event) {\n\n                    event.stopPropagation();\n\n                });\n\n                // Hide when off click\n                $('body').click(function() {\n\n                    methods.hide_results.apply($this);\n\n                });\n\n            });\n\n        },\n\n        keyup: function(e) {\n\n            // Load settings\n            var settings = $(this).data('Predinput');\n\n            // Set objects\n            var $this = $(this);\n            var $res = $(this).find('.results');\n\n            // Check for down, up and return keys\n            if (e.keyCode == 40 || e.keyCode == 38 || e.keyCode == 13) {\n\n                // Get current index\n                var index = parseInt($res.find('ul').attr('data-index'));\n\n                if (e.keyCode == 40) { // down\n\n                    index++;\n                    if (index == $res.find('ul li').length) index--;\n\n                }\n                else if (e.keyCode == 38) { // up\n\n                    index--;\n                    if (index < 0) index = 0;\n\n                }\n                else if (e.keyCode == 13) {\n\n                    methods.hide_results.apply($this);\n\n                    // Trigger\n                    $this.trigger('selected.sa.predinput', [settings]);\n\n                }\n\n                // Save index\n                $res.find('ul').attr('data-index', index);\n\n                // Get object for current index\n                var $index = $res.find('ul li:nth-child(' + (index + 1) + ')');\n\n                // Remove active class\n                $res.find('ul li').removeClass('active');\n\n                // Add active class to\n                $index.addClass('active');\n\n                // Set search string\n                $this.find('input').val($index.text());\n\n            }\n            else {\n\n                if (!settings.searching) {\n                    settings.searching = true;\n                    methods.search.apply($this);\n                }\n                else {\n                    settings.search_again = true;\n                }\n\n            }\n\n            if ($this.find('input').val()) {\n                $this.find('.clear').css('display', 'block');\n            }\n            else {\n                $this.find('.clear').css('display', 'none');\n            }\n\n        },\n\n        search: function() {\n\n            // Load settings\n            var settings = $(this).data('Predinput');\n\n            // Set objects\n            var $this = $(this);\n            var $res = $(this).find('.results');\n\n            // Clear results HTML\n            $res.html('').css('display', 'block');\n\n            // Do seach\n            $.ajax({\n\n                url: settings.search_url,\n                cache: false,\n                type: settings.http_request,\n                data: {\n                    search: $(this).find('input').val(),\n                    data: JSON.stringify(settings.data)\n                }\n\n            }).done(function(results) {\n\n                $res.html(results);\n\n                $res.find('ul').attr('data-index', '-1');\n\n                $res.find('li').each(function(index) {\n                    $(this).attr('data-index', index);\n                });\n\n                $res.find('li').mouseover(function() {\n                    $(this).siblings().removeClass('active');\n                    $(this).addClass('active');\n                    $(this).parent().attr('data-index', $(this).attr('data-index'));\n                });\n\n                $res.find('li').click(function() {\n                    $this.find('input').val($(this).text());\n                    methods.hide_results.apply($this);\n\n                    // Trigger\n                    $this.trigger('selected.sa.predinput', [settings]);\n\n                });\n\n                settings.searching = false;\n\n                if (settings.search_again) {\n                    settings.search_again = false;\n                    settings.searching = true;\n                    methods.search.apply($this);\n                }\n\n                // Trigger\n                $this.trigger('search.sa.predinput', [settings]);\n\n            });\n\n        },\n\n        hide_results: function() {\n            $(this).find('.results').css('display', 'none');\n        }\n\n    };\n\n    $.fn.Predinput = function(method) {\n\n        if (methods[method]) {\n\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n\n        }\n        else if (typeof method === 'object' || !method) {\n\n            return methods.init.apply(this, arguments);\n\n        }\n        else {\n\n            $.error('Method ' + method + ' does not exist on jQuery.Datatable');\n\n        }\n\n    };\n\n}(jQuery, $STAN));\n",
    "/* ========================================================================\n * STAN Utils: ScrollTo\n * Author: Andrew Womersley\n * ======================================================================== */\n\n(function($, $STAN) {\n\n    'use strict';\n\n    // Define Global Vars\n    var Selectors = [];\n\n    $(window).scroll(function() {\n\n        if (!Selectors.length) return;\n\n        $(Selectors).each(function() {\n\n            var settings = $(this).data('scrollTo');\n\n            if (settings.scroll_spy) methods.Scroll.apply(this);\n\n        });\n\n        return true;\n\n    });\n\n    // Define Methods\n    var methods = {\n\n        init: function(options) {\n\n            // Save selector in array\n            if($(this.selector).length) Selectors.push(this.selector);\n\n            // Add selector to options\n            options.selector = this.selector;\n\n            return this.each(function() {\n\n                // Set this\n                var $this = $(this);\n\n                // Set Options\n                var settings = $.extend({\n\n                    listener: 'click',\n                    offset: 0,\n                    scroll_speed: 300,\n                    scroll_spy: true,\n                    active_class:'active'\n\n                }, options);\n\n                // Save settings\n                $this.data('scrollTo', settings);\n\n                // Add listener\n                $(this).on(settings.listener, function() {\n\n                    methods.Listener.apply($this, [$(this)]);\n\n                    if(settings.scroll_spy) return false; else return true;\n\n                });\n\n                var vars = methods.getVars.apply($this, [$this, settings]);\n\n                if (window.location.hash == vars.target){\n                  $('body,html').scrollTop(vars.position);\n                }\n\n            });\n\n        },\n\n        Listener: function(_this) {\n\n            var settings = this.data('scrollTo');\n\n            var $this = $(this);\n\n            var vars = methods.getVars.apply(this, [_this, settings]);\n\n            $('body,html').animate({\n                scrollTop: vars.position\n            }, settings.scroll_speed, function() {\n\n                // Trigger\n                $this.trigger('scroll_end.sa.scrollto', [settings]);\n\n            });\n\n        },\n\n        Scroll: function() {\n\n            var $this = $(this);\n\n            var settings = $this.data('scrollTo');\n\n            var scrolltop;\n\n            $('body').find(settings.selector).each(function(){\n\n              $(this).removeClass(settings.active_class);\n              if($(this).attr('data-active-class')) $(this).removeClass( $(this).attr('data-active-class') );\n            \n          });\n\n            var st = {\n                position: 0,\n                target: false\n            };\n\n            $('body').find(settings.selector).each(function() {\n\n                var vars = methods.getVars.apply(this, [this, settings]);\n\n                if ($(window).scrollTop() >= vars.maxscroll) scrolltop = $(document).height();\n                else scrolltop = $(window).scrollTop();\n\n                if (scrolltop >= vars.position && vars.position >= st.position) st = {\n                    position: vars.position,\n                    element: $(this),\n                    target: vars.target\n                };\n\n            });\n\n            if (st.target) {\n                $(st.element).addClass(settings.active_class);\n                if($(st.element).attr('data-active-class')) $(st.element).addClass( $(st.element).attr('data-active-class') );\n                if(window.location.hash!=st.target){\n                  window.location.hash = st.target;\n                  $this.trigger('hash_change.sa.scrollto', [settings]);\n                }\n            } else {\n                if (window.location.hash!='#/') {\n                    window.location.hash = '#/';\n                    $this.trigger('hash_change.sa.scrollto', [settings]);\n                }\n            }\n\n\n\n        },\n\n        getVars: function(object, settings) {\n\n            var offset;\n\n            if ($(object).attr('data-offset')) offset = $(object).attr('data-offset');\n            else if (typeof settings.offset === 'function') offset = settings.offset($(this), settings);\n            else offset = settings.offset;\n\n            var target = $(object).attr('data-target') ? $(object).attr('data-target') : $(object).attr('href');\n            var maxscroll = $(document).height() - $(window).height();\n            var selector = $(\"[data-id='\" + target.substring(1) + \"']\");\n\n            if (selector.length) {\n\n                // Ensure selector and parent are displayed\n                $([selector,selector.parent()]).addClass('block');\n\n                // Get positon\n                var position = selector.offset().top - parseInt(offset);\n\n                // Revert display\n                $([selector,selector.parent()]).removeClass('block');\n\n            } else {\n                var position = 0;\n            }\n\n            return {\n                offset: offset,\n                target: target,\n                position: position,\n                maxscroll: maxscroll\n            };\n\n        }\n\n    };\n\n    $.fn.ScrollTo = function(method) {\n\n        if (methods[method]) {\n\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n\n        } else if (typeof method === 'object' || !method) {\n\n            return methods.init.apply(this, arguments);\n\n        } else {\n\n            $.error('Method ' + method + ' does not exist on jQuery.Datatable');\n\n        }\n\n    };\n\n}(jQuery, $STAN));\n",
    "/* ========================================================================\n * STAN Utils: SlideOut\n * Author: Andrew Womersley\n * ======================================================================== */\n\n(function($, $STAN) {\n\n    'use strict';\n\n    // Define Global Vars\n    var Selectors = [];\n\n    $STAN.on('resize',function() {\n\n        if (!Selectors.length) return;\n\n            $(Selectors).each(function() {\n\n                var settings = $(this).data('slideOut');\n\n                if (!settings.devices[$STAN.device] && settings.open) {\n                    settings.reopen = true;\n                    methods.hide.apply(this);\n                }\n                else if (settings.devices[$STAN.device] && settings.reopen && settings.auto_reopen) {\n                    settings.reopen = false;\n                    methods.show.apply(this);\n                }\n\n            });\n\n    });\n\n    // Click Listeners\n    $(window).ready(function() {\n\n        // Show\n        $(\"[data-toggle='slideout.show']\").click(function() {\n\n            return methods.show.apply($($(this).attr('data-target')));\n\n        });\n\n        // Hide\n        $(\"[data-toggle='slideout.hide']\").click(function() {\n\n            return methods.hide.apply($($(this).attr('data-target')));\n\n        });\n\n        // Toggle\n        $(\"[data-toggle='slideout.toggle']\").click(function() {\n\n            return methods.toggle.apply($($(this).attr('data-target')));\n\n        });\n\n    });\n\n\n    // Define Methods\n    var methods = {\n\n        init: function(options) {\n\n            // Save selector in array\n            $(this.selector).each(function(){\n\n                Selectors.push( $(this) );\n\n            });\n\n            // Iterate Through Selectors\n            return this.each(function(index) {\n\n                // Set this\n                var $this = $(this);\n\n                // Set Options\n                var settings = $.extend({\n                    pos: 'left',\n                    open: false,\n                    speed: 300,\n                    auto_reopen: true,\n                    auto_close: false,\n                    devices: {\n                        xs: true,\n                        sm: true,\n                        md: true,\n                        lg: true\n                    }\n                }, options);\n\n\n                // Save settings\n                $this.data('slideOut', settings);\n\n                $this.addClass('slideout slideout-' + settings.pos);\n\n\n                // Hide if not open or if not set for current device\n                if (!settings.open || !settings.devices[$STAN.device]) {\n\n                    // Set CSS to closed position\n                    $this.css(methods.getPosValue.apply(this, [settings.pos]));\n\n                }\n                else {\n\n                    // Turn on display\n                    $this.css({\n                        display: 'block'\n                    });\n\n                }\n\n                // Set Mouseover listeners\n                if (settings.auto_close) {\n\n                    $(this).mouseover(function() {\n                        methods.clearTmr.apply(this);\n                    }).mouseout(function() {\n                        methods.setTmr.apply(this);\n                    });\n\n                }\n\n            });\n\n        },\n\n        getPosValue: function(pos) {\n\n            var val;\n\n            if (pos == 'top' || pos == 'bottom') val = $(this).outerHeight();\n            if (pos == 'left' || pos == 'right') val = $(this).outerWidth();\n\n            var css = {}\n            css[pos] = val * -1;\n\n            return css;\n\n        },\n\n        clearTmr: function() {\n\n            var settings = $(this).data('slideOut');\n            clearTimeout(settings.tmr);\n\n        },\n\n        setTmr: function() {\n\n            var settings = $(this).data('slideOut');\n\n            methods.clearTmr.apply(this);\n\n            var $this = this;\n            settings.tmr = setTimeout(function() {\n                methods.hide.apply($this);\n            }, parseInt(settings.auto_close) * 1000);\n\n        },\n\n        show: function() {\n\n            var settings = $(this).data('slideOut');\n\n            if (settings.devices[$STAN.device]) {\n\n                if (!settings.open) {\n\n                    // Recalculate hidden position incase the height of div has changed\n                    var css = methods.getPosValue.apply(this, [settings.pos]);\n                    css['display'] = 'block';\n                    $(this).css(css);\n\n                    // Set 0 position\n                    var css = {}\n                    css[settings.pos] = 0;\n\n                    // Animate\n                    $(this).animate(css, settings.speed, function() {\n\n                        // Set open to true\n                        settings.open = true;\n\n                        // Trigger\n                        $(this).trigger('show.sa.slideout', [settings]);\n\n                    });\n\n                }\n\n                // Set auto close timer\n                if (settings.auto_close) methods.setTmr.apply(this);\n\n\n                // Return false to stop default action\n                return false;\n\n            }\n            else {\n\n                // Return true to allow default action\n                return true;\n\n            }\n\n        },\n\n        hide: function() {\n\n            var settings = $(this).data('slideOut');\n\n            if (settings.open) {\n\n                // Get CSS data\n                var css = methods.getPosValue.apply(this, [settings.pos]);\n\n                // Animate\n                $(this).animate(css, settings.speed, function() {\n                    $(this).css({\n                        display: 'none'\n                    });\n\n                    // Set open to false\n                    settings.open = false;\n\n                    // Trigger\n                    $(this).trigger('hide.sa.slideout', [settings]);\n\n                });\n\n            }\n\n            // Return false to stop default action\n            return false;\n\n        },\n\n        toggle: function() {\n\n            var settings = $(this).data('slideOut');\n\n            if (settings.open) return methods.hide.apply(this);\n            else return methods.show.apply(this);\n\n        }\n\n    };\n\n    $.fn.SlideOut = function(method) {\n\n        if (methods[method]) {\n\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n\n        }\n        else if (typeof method === 'object' || !method) {\n\n            return methods.init.apply(this, arguments);\n\n        }\n        else {\n\n            $.error('Method ' + method + ' does not exist on jQuery.Datatable');\n\n        }\n\n    };\n\n}(jQuery, $STAN));\n",
    "/* ========================================================================\n * STAN Utils: Slider\n * Author: Andrew Womersley\n * ======================================================================== */\n\n(function($, $STAN) {\n\n    'use strict';\n\n    // Define Global Vars\n    var Selectors = [];\n\n    // Resize Listener for resizing slideshow height\n    $STAN.on('resize',function() {\n\n        if (!Selectors.length) return;\n\n        $(Selectors).each(function() {\n\n            // Resize check\n            methods.resize.apply(this);\n\n        });\n\n    });\n\n    // Click Listeners\n    $(window).ready(function() {\n\n        // Set\n        $(\"body\").on(\"click\",\"[data-toggle='slider.set']\",function() {\n\n          var target=!! $(this).attr('data-target') ? $($(this).attr('data-target')) : $(this).parents('.slider');\n\n          return methods.set.apply(target, [$(this).attr('data-index')]);\n\n        });\n\n        // Next\n        $(\"body\").on(\"click\",\"[data-toggle='slider.next']\",function() {\n\n          var target=!! $(this).attr('data-target') ? $($(this).attr('data-target')) : $(this).parents('.slider');\n\n          methods.move.apply(target, ['next', true]);\n\n        });\n\n        // Prev\n        $(\"body\").on(\"click\",\"[data-toggle='slider.prev']\",function() {\n\n          var target=!! $(this).attr('data-target') ? $($(this).attr('data-target')) : $(this).parents('.slider');\n\n          methods.move.apply(target, ['prev', true]);\n\n        });\n\n        // Autoplay set\n        $(\"body\").on(\"click\",\"[data-toggle='slider.autoplay-set']\",function() {\n\n          var target=!! $(this).attr('data-target') ? $($(this).attr('data-target')) : $(this).parents('.slider');\n\n          methods.setAutoplay.apply(target, [true]);\n\n        });\n\n        // Autoplay clear\n        $(\"body\").on(\"click\",\"[data-toggle='slider.autoplay-clear']\",function() {\n\n          var target=!! $(this).attr('data-target') ? $($(this).attr('data-target')) : $(this).parents('.slider');\n\n          methods.clearAutoplay.apply(target);\n\n        });\n\n    });\n\n\n    // Define Methods\n    var methods = {\n\n        init: function(options) {\n\n            // Add selector to options\n            options.selector = this.selector;\n\n            // Iterate Through Selectors\n            return this.each(function(index) {\n\n                // Save selector in array\n                Selectors.push($(this));\n\n                // Set this\n                var $this = $(this);\n                var i, layer;\n\n                // Set Options\n                var settings = $.extend({\n                    height: false,\n                    activeIndex: 0,\n                    autoplay: false,\n                    autoplay_break_on_click: true,\n                    autoplay_delay: 5000,\n                    layers: [],\n                    currentIndex:0,\n                    nextIndex:0,\n                    prevIndex:0\n                }, options);\n\n                settings.action = settings.timer = settings.animationLength = false;\n\n                // Save settings\n                $this.data('Slider', settings);\n\n                // Set aspect ratio type\n                if(typeof settings.height==='object') settings.aspect_ratio='variable'; else settings.aspect_ratio='fixed';\n\n                // Set total\n                settings.total = $this.find('.frame').length;\n                $this.find(\"[data-role='slider.counter'] .total\").text(settings.total);\n\n                // Hide controls if less than 2 frames\n                if(settings.total<2){\n\n                  $this.find(\"[data-toggle='slider.next']\").css('display','none');\n                  $(\"[data-target='\" + settings.selector + \"'][data-toggle='slider.next']\").css('display','none');\n\n                  $this.find(\"[data-toggle='slider.prev']\").css('display','none');\n                  $(\"[data-target='\" + settings.selector + \"'][data-toggle='slider.prev']\").css('display','none');\n\n                  $this.find(\"[data-role='slider.navigation']\").css('display','none');\n                  $(\"[data-target='\" + settings.selector + \"'][data-role='slider.navigation']\").css('display','none');\n\n                  $this.find(\"[data-role='slider.counter']\").css('display','none');\n                  $(\"[data-target='\" + settings.selector + \"'][data-role='slider.counter']\").css('display','none');\n\n                }\n\n\n                // Set currentIndex\n                settings.currentIndex = settings.nextIndex = settings.activeIndex;\n\n                // Layers\n                for (i in settings.layers) {\n\n                  layer = $.extend({\n                    baseCSS: false,\n                    inCSS: false,\n                    inDelay: 0,\n                    inDuration: 300,\n                    inEasing: 'linear',\n                    outCSS: false,\n                    outDelay: 0,\n                    outDuration: 300,\n                    outEasing: 'linear',\n                    external: false,\n                    reverse_for_prev: false,\n                    selector:[]\n                  }, settings.layers[i]);\n\n\n                  // set layer selector\n                  if(layer.external) {\n\n                    layer.selector = $(\"[data-target='\" + settings.selector + \"'].layer\" + i);\n\n                  } else {\n\n                    layer.selector = $this.find('.layer'+i);\n\n                  }\n\n                  // set layer to full width and height if slide show is fixed height\n                  if(settings.aspect_ratio=='variable') layer.selector.addClass('fill-frame');\n\n                  // set layer presets\n                  if (layer.presetCSS == 'fade') {\n\n                      layer.baseCSS = {\n                          opacity: 0\n                      };\n                      layer.inCSS = {\n                          opacity: 1\n                      };\n                      layer.outCSS = {\n                          opacity: 0\n                      };\n\n                  } else if (layer.presetCSS == 'slide') {\n\n                      layer.baseCSS = {\n                          left: '100%'\n                      };\n                      layer.inCSS = {\n                          left: 0\n                      };\n                      layer.outCSS = {\n                          left: '-100%'\n                      };\n\n                      layer.reverse_for_prev=true;\n\n                      layer.selector.addClass('absolute');\n\n                  }\n\n                  // set animationLength\n                  if((layer.inDelay+layer.inDuration)>settings.animationLength){\n                    settings.animationLength=layer.inDelay+layer.inDuration;\n                  }\n\n                  // apply base css\n                  $(layer.selector).css(layer.baseCSS);\n\n                  // save layer data base to settings\n                  settings.layers[i]=layer;\n\n                }\n\n                // Set dot buttons if navigation container is empty\n                if(!$this.find(\"[data-role='slider.navigation']\").html()){\n                    for (i = 0; i < settings.total; i++) {\n                        $this.find(\"[data-role='slider.navigation']\").append('<span data-toggle=\"slider.set\" data-index=\"'+i+'\"></span>');\n                    }\n                }\n\n                // Add load events\n                $this.find('img').load(function() {\n\n                    methods.resize.apply($this);\n\n                });\n\n                // Update active indexes\n                methods.animate_complete.apply($this);\n\n                // Do resize\n                methods.resize.apply(this);\n\n\n                $this.css({\n                  visibility: 'visible'\n                });\n\n                $this.find('.frame').eq(settings.activeIndex).css({\n                  'z-index':20\n                });\n\n                for (var i in settings.layers) {\n\n                  $(settings.layers[i].selector).eq(settings.activeIndex).css(settings.layers[i].inCSS);\n\n                }\n\n\n            });\n\n        },\n\n        next: function(){\n\n          var $this = $(this);\n\n          methods.move.apply($this, ['next', true]);\n\n        },\n\n        prev: function(){\n\n          var $this = $(this);\n\n          methods.move.apply($this, ['prev', true]);\n\n        },\n\n        move: function(direction, isClick) {\n\n            // Get settings and set this\n            var settings = $(this).data('Slider');\n            var $this = $(this);\n\n            // Check slider is not currently in action\n            if (!settings.action) {\n\n                // Set action to true\n                settings.action = true;\n\n                // Clear autoplay\n                clearTimeout(settings.timer);\n                if (settings.autoplay_break_on_click && isClick) methods.clearAutoplay.apply($this);\n\n                // Set indexes\n                if (direction == 'next') {\n\n                    settings.nextIndex = settings.currentIndex + 1;\n                    if (settings.nextIndex == settings.total) settings.nextIndex = 0;\n\n                    settings.preLoadIndex = settings.nextIndex + 1;\n                    if (settings.preLoadIndex == settings.total) settings.preLoadIndex = 0;\n\n                } else {\n\n                    settings.nextIndex = settings.currentIndex - 1;\n                    if (settings.nextIndex < 0) settings.nextIndex = settings.total - 1;\n\n                    settings.preLoadIndex = settings.nextIndex - 1;\n                    if (settings.preLoadIndex < 0) settings.preLoadIndex = settings.total - 1;\n\n                }\n\n                // Animate\n                methods.animate.apply($this, [direction]);\n\n            }\n\n        },\n\n        set: function(index) {\n\n            // Get settings and set this\n            var settings = $(this).data('Slider');\n            var $this = $(this);\n            var direction;\n\n            // Check slider is not currently in action\n            if (!settings.action && index != settings.currentIndex) {\n\n                // Set action to true\n                settings.action = true;\n\n                // Clear autoplay\n                clearTimeout(settings.timer);\n                if (settings.autoplay_break_on_click) methods.clearAutoplay.apply($this);\n\n                // Set direction\n                direction = (index > settings.currentIndex) ? 'next' : 'prev';\n\n                // Set nextIndex\n                settings.nextIndex = parseInt(index);\n\n                // Animate\n                methods.animate.apply($this, [direction]);\n\n            }\n\n        },\n\n        animate: function(direction) {\n\n            // Get settings and set this\n            var settings = $(this).data('Slider');\n            var $this = $(this);\n            var i, layer, cssPreMove, cssPostMove;\n            var next = [];\n            var current = [];\n\n            // Tigger pre move event\n            $(this).trigger('pre-move.sa.slider', [settings]);\n\n            // Remove active classes\n            $this.find(\"[data-toggle='slider.set']\").removeClass('active');\n            $(\"[data-target='\" + settings.selector + \"'][data-toggle='slider.set']\").removeClass('active');\n\n            // Get frames\n            var $next = $this.find('.frame').eq(settings.nextIndex);\n            var $current = $this.find('.frame').eq(settings.currentIndex);\n\n\n            // Set CSS for next/current frames\n            $current.css({\n                'z-index': 10\n            });\n            $next.css({\n                'z-index': 20\n            });\n\n            // Animate layers\n            for (i in settings.layers) {\n\n                layer = settings.layers[i];\n\n                // Set Pre/Post CSS dependant on direction\n                if(layer.reverse_for_prev){\n                    cssPreMove = (direction == 'next') ? layer.baseCSS : layer.outCSS;\n                    cssPostMove = (direction == 'next') ? layer.outCSS : layer.baseCSS;\n                }else{\n                    cssPreMove = layer.baseCSS;\n                    cssPostMove = layer.outCSS;\n                }\n\n\n                // get next\n                next[i] = $(layer.selector).eq(settings.nextIndex);\n                current[i] = $(layer.selector).eq(settings.currentIndex);\n\n                // Set next CSS and animate\n                current[i].delay(layer.outDelay).animate(cssPostMove, layer.outDuration, layer.outEasing);\n                next[i].css(cssPreMove);\n                next[i].delay(layer.inDelay).animate(layer.inCSS, layer.inDuration, layer.inEasing);\n\n            }\n\n            // Set post animation timeout\n            setTimeout(function() {\n\n              // Animation complete\n              methods.animate_complete.apply($this);\n\n              // Tigger post move event\n              $this.trigger('post-move.sa.slider', [settings]);\n\n            }, settings.animationLength);\n\n        },\n\n        animate_complete: function() {\n\n            // Get settings and set this\n            var settings = $(this).data('Slider');\n            var $this = $(this);\n\n            // Update indexes\n            settings.prevIndex = settings.currentIndex;\n            settings.currentIndex = settings.nextIndex;\n\n            // Add/remove active classes\n            $this.find('.frame')\n                .removeClass('active')\n                .eq(settings.nextIndex).addClass('active');\n\n            // Update counter\n            $this.find(\"[data-role='slider.counter'] .current\").text(settings.currentIndex + 1);\n\n            // Add active classes\n            $this.find(\"[data-toggle='slider.set'][data-index='\" + settings.currentIndex + \"']\").addClass('active');\n            $(\"[data-target='\" + settings.selector + \"'][data-toggle='slider.set'][data-index='\" + settings.currentIndex + \"']\").addClass('active');\n\n            // Set Timer\n            methods.setAutoplay.apply($this,[false]);\n\n            // Set action to false\n            settings.action = false;\n\n        },\n\n        setAutoplay: function(setAutoPlay){\n\n          var settings = $(this).data('Slider');\n          var $this = $(this);\n          var delay=1;\n\n          if(setAutoPlay && !settings.autoplay){\n\n            // Turn autoplay on\n            settings.autoplay = true;\n\n            // Trigger event\n            $(this).trigger('autoplay-set.sa.slider', [settings]);\n\n          }else{\n            delay=settings.autoplay_delay;\n          }\n\n          if (settings.autoplay && settings.total>1) {\n\n              // Set active class on clear\n              $this.find(\"[data-toggle='slider.autoplay-clear']\").addClass('active');\n              $(\"[data-target='\" + settings.selector + \"'][data-toggle='slider.autoplay-clear']\").addClass('active');\n\n              // Remove active classes from set\n              $this.find(\"[data-toggle='slider.autoplay-set']\").removeClass('active');\n              $(\"[data-target='\" + settings.selector + \"'][data-toggle='slider.autoplay-set']\").removeClass('active');\n\n              settings.timer = setTimeout(function() {\n\n                  methods.move.apply($this, ['next', false]);\n\n              }, delay);\n\n          }else{\n\n            methods.clearAutoplay.apply($this);\n\n          }\n\n        },\n\n        clearAutoplay: function(){\n\n          var settings = $(this).data('Slider');\n          var $this = $(this);\n\n          if(settings.autoplay){\n\n            // Trigger event\n            $(this).trigger('autoplay-clear.sa.slider', [settings]);\n\n          }\n\n          if(settings.total > 1){\n\n            // Set active class on set\n            $this.find(\"[data-toggle='slider.autoplay-set']\").addClass('active');\n            $(\"[data-target='\" + settings.selector + \"'][data-toggle='slider.autoplay-set']\").addClass('active');\n\n            // Remove active classes from clear\n            $this.find(\"[data-toggle='slider.autoplay-clear']\").removeClass('active');\n            $(\"[data-target='\" + settings.selector + \"'][data-toggle='slider.autoplay-clear']\").removeClass('active');\n\n          }\n\n          settings.autoplay = false;\n\n          clearTimeout(settings.timer);\n\n        },\n\n        resize: function() {\n\n            // Get settings and set this\n            var settings = $(this).data('Slider');\n            var $this = $(this);\n\n\n            // Set vars to hold frame height\n            var fh = 0;\n            var h;\n            // Perform size fixes\n            if (settings.aspect_ratio == 'fixed') {\n\n                // Get height of frames\n                $this.find('.frame').each(function() {\n                    if ($(this).children().outerHeight(true) > fh) fh = $(this).children().outerHeight(true);\n                });\n\n                // Set height of frames\n                $this.find('.frame').css({\n                    height: fh + 'px'\n                }).parent().closest('div').css({\n                    height: fh + 'px'\n                });\n\n            } else {\n\n                if( !isNaN(parseFloat(settings.height[$STAN.device])) && isFinite(settings.height[$STAN.device]) ){ // is number\n\n                    h=parseInt(settings.height[$STAN.device]);\n\n                }else{ // is selector/function\n\n                    h=eval(settings.height[$STAN.device]);\n\n                }\n\n                // Set height of main slider\n                $this.css('height', h);\n\n                // Set height of frames\n                $this.find('.frame').css({\n                  height: h\n                }).parent().closest('div').css({\n                  height: h\n                });\n\n            }\n\n        },\n\n        getSettings:function(){\n\n          var settings = $(this).data('Slider');\n\n          return settings;\n\n        }\n\n    };\n\n    $.fn.Slider = function(method) {\n\n        if (methods[method]) {\n\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n\n        } else if (typeof method === 'object' || !method) {\n\n            return methods.init.apply(this, arguments);\n\n        } else {\n\n            $.error('Method ' + method + ' does not exist on jQuery.Datatable');\n\n        }\n\n    };\n\n}(jQuery, $STAN));\n",
    "/* ========================================================================\n * STAN Utils: StickyFix\n * Author: Andrew Womersley\n * ======================================================================== */\n\n(function($, $STAN) {\n\n    'use strict';\n\n    // Define Global Vars\n    var Selectors = [];\n\n    $STAN.on('resize',function() {\n\n        if (!Selectors.length) return;\n\n        $(Selectors).each(function() {\n\n            methods.updateOffset.apply(this);\n            methods.stick.apply(this);\n\n        });\n\n    });\n\n    $(window).scroll(function() {\n\n        if (!Selectors.length) return;\n\n        $(Selectors).each(function() {\n\n            methods.stick.apply(this);\n\n        });\n\n    }).scroll();\n\n\n    // Define Methods\n    var methods = {\n\n        init: function(options) {\n\n            var $this = this;\n\n            // Set Options\n            var settings = $.extend({\n                top: 0,\n                maxtop: false,\n                maxscroll: 99999,\n                sticky_class: '',\n                stick_to: 'window',\n                zindex:1000,\n                devices: {\n                    xs: true,\n                    sm: true,\n                    md: true,\n                    lg: true\n                },\n                _css:{\n                    top: $this.css('top'),\n                    position: $this.css('position'),\n                    zindex: $this.css('z-index')\n                },\n                _status: 'unstuck'\n            }, options);\n\n            // Save selector in array\n            $(this.selector).each(function(){\n\n                Selectors.push( $(this) );\n\n            });\n\n            // Iterate Through Selectors\n            return this.each(function(index) {\n\n                var placeholder = \"sticky-\" + $this.selector.substring(1) + \"-\" + index;\n\n                $(this).after(\"<div class='sticky-placeholder' id='\" + placeholder + \"' style='display:none;height:\" + $(this).height() + \"px;'></div>\");\n\n                // Set Data\n                settings.offset = $(this).offset();\n                settings.placeholder = '#' + placeholder;\n\n                // Save settings\n                $(this).data('StickyFix', settings);\n\n            });\n\n        },\n\n        stick: function() {\n\n            var settings = $(this).data('StickyFix');\n\n            var t = settings.offset.top - $(window).scrollTop();\n\n            var mintop;\n            var maxtop;\n            var maxscroll;\n            var topscroll;\n            var pos;\n\n            if (typeof settings.top === 'function') mintop = settings.top($(this),settings);\n            else if (typeof settings.top === 'number') mintop = settings.top;\n            else mintop = 99999;\n\n            if (t <= mintop && settings.devices[$STAN.device]) {\n\n                if (typeof settings.maxtop === 'function') maxtop = settings.maxtop($(this),settings);\n                else if (typeof settings.maxtop === 'number') maxtop = settings.maxtop;\n                else maxtop = 99999;\n\n                maxscroll = settings.maxscroll + maxtop;\n\n                if ($(window).scrollTop() > maxtop) {\n\n                    if( $(window).scrollTop()>maxscroll ){\n                      pos = mintop - ( maxscroll - maxtop );\n                    }else{\n                      pos = mintop - ($(window).scrollTop() - maxtop);\n                    }\n\n                    $(this).css('top', pos + 'px');\n\n                }\n                else {\n\n                    // Trigger\n                    if (settings._status == 'unstuck'){\n\n                      $(this).trigger('stuck.sa.stickyfix', [settings]);\n\n                        $(this).addClass(\"sticky-fix-stuck \"+settings.sticky_class).css({\n                            top: mintop + 'px',\n                        });\n\n                        settings._status='stuck';\n\n                        $(settings.placeholder).css({display:'block',height:$(this).height()+'px' });\n\n                        if (settings.stick_to == 'parent') $(this).css({\n                            width: $(settings.placeholder).width() + 'px',\n                            left: $(settings.placeholder).offset().left + 'px'\n                        });\n\n                    }\n\n                }\n\n            }\n            else {\n\n                // Trigger\n                if (settings._status == 'stuck') $(this).trigger('unstuck.sa.stickyfix', [settings]);\n\n                  $(this).removeClass(\"sticky-fix-stuck \"+settings.sticky_class).css({\n                      top: settings._css.top,\n                  });\n\n                  settings._status='unstuck';\n\n                  $(settings.placeholder).css('display', 'none');\n\n                  if (settings.stick_to == 'parent') $(this).css({\n                      width: 'auto',\n                      left: 'auto'\n                  });\n\n\n\n            }\n\n        },\n\n        updateOffset:function(){\n\n          var settings = $(this).data('StickyFix');\n\n          var mintop;\n\n          if (typeof settings.top === 'function') mintop = settings.top($(this),settings);\n          else if (typeof settings.top === 'number') mintop = settings.top;\n          else mintop = 99999;\n\n          // Unstick element\n          $(this).removeClass(\"sticky-fix-stuck \"+settings.sticky_class).css({\n              top: settings._css.top,\n          });\n\n          // Calculate new offset\n          settings.offset = $(this).offset();\n\n          // Set placeholder height\n          $(settings.placeholder).css({height:$(this).outerHeight(true)+'px' });\n\n          // Restick element\n          $(this).addClass(\"sticky-fix-stuck \"+settings.sticky_class).css({\n              top: mintop + 'px',\n          });\n\n        }\n\n    };\n\n    $.fn.StickyFix = function(method) {\n\n        if (methods[method]) {\n\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n\n        }\n        else if (typeof method === 'object' || !method) {\n\n            return methods.init.apply(this, arguments);\n\n        }\n        else {\n\n            $.error('Method ' + method + ' does not exist on jQuery.Datatable');\n\n        }\n\n    };\n\n}(jQuery, $STAN));\n",
    "/* ========================================================================\n * STAN Utils: Swiper\n * Author: Andrew Womersley\n * ======================================================================== */\n\n(function($, $STAN) {\n\n    'use strict';\n\n    // Define Global Vars\n    var Selectors = [];\n\n    // Define Methods\n    var methods = {\n\n        init: function(options) {\n\n            // Add selector to options\n            options.selector = this.selector;\n\n            // Iterate Through Selectors\n            return this.each(function(index) {\n\n                // Save selector in array\n                Selectors.push($(this));\n\n                // Set this\n                var $this = $(this);\n                var i, layer;\n\n                // Set Options\n                var settings = $.extend({\n                    left:false,\n                    right:false,\n                    up:false,\n                    down:false,\n                    sensitivity:'medium'\n                }, options);\n\n                // Save settings\n                $this.data('Swiper', settings);\n\n                $this.on('touchstart mousedown',function(event){\n\n                  var settings=$this.data('Swiper');\n\n                  var coX=!! event.pageX ? event.pageX : event.originalEvent.touches[0].pageX;\n                  var coY=!! event.pageY ? event.pageY : event.originalEvent.touches[0].pageY;\n\n                  settings.coX=coX;\n                  settings.coY=coY;\n                  settings.swiped=false;\n\n                });\n\n                $this.on('touchmove mouseup',function(event){\n\n                  var settings=$this.data('Swiper');\n\n                  var coX=!! event.pageX ? event.pageX : event.originalEvent.touches[0].pageX;\n                  var coY=!! event.pageY ? event.pageY : event.originalEvent.touches[0].pageY;\n\n                  var distX=settings.coX-coX;\n                  var distY=settings.coY-coY;\n\n                  var dirX, dirY, dir, dist, size;\n\n                  if(distX<0){\n                    dirX='right';\n                    distX=distX*-1;\n                  }else{\n                    dirX='left';\n                  }\n\n                  if(distY<0){\n                    dirY='down';\n                    distY=distY*-1;\n                  }else{\n                    dirY='up';\n                  }\n\n                  if(distX>distY){\n                    dir=dirX;\n                    dist=distX;\n                    size=$(this).width();\n                  }else{\n                    dir=dirY;\n                    dist=distY;\n                    size=$(this).height();\n                  }\n\n                  if(settings[dir] && !settings.swiped){\n\n                    var percent=(dist/size)*100;\n\n                    if(percent>80 || (percent>50 && settings.sensitivity=='medium') || (percent>20 && settings.sensitivity=='low')){\n\n                      settings.direction=dir;\n                      settings.distance=dist;\n\n                      $(this).trigger('swipe.sa.swiper', [settings]);\n                      $(this).trigger(dir+'.sa.swiper', [settings]);\n                      settings.swiped=true;\n\n                    }\n\n                    event.preventDefault();\n                    return false;\n\n                  }else{\n\n                    return true;\n\n                  }\n\n\n                });\n\n            });\n\n        }\n\n\n    };\n\n    $.fn.Swiper = function(method) {\n\n        if (methods[method]) {\n\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n\n        } else if (typeof method === 'object' || !method) {\n\n            return methods.init.apply(this, arguments);\n\n        } else {\n\n            $.error('Method ' + method + ' does not exist on jQuery.Datatable');\n\n        }\n\n    };\n\n}(jQuery, $STAN));\n"
  ]
}